{"ast":null,"code":"var _jsxFileName = \"/home/goutham/typescript-sample/src/components/App.tsx\";\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as actions from '../actions';\nimport { thunkSendMessage } from '../actions/thunkActions';\nimport logo from \"../logo.svg\";\nimport './App.css';\n\nconst App = () => {\n  useEffect(() => {\n    dispatch(actions.planetAction);\n  }, []);\n  const message = useSelector(state => state.message);\n  const id = useSelector(state => state.id);\n  const planet = useSelector(state => state.planet);\n  const dispatch = useDispatch();\n\n  const onClick = () => {\n    dispatch(actions.sampleAction2(id + 1));\n    dispatch(thunkSendMessage('hello'));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"message:\", ' ', message, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), \"id:\", ' ', id, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"increment id\"), \"planets:\", planet.map(data => {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 19\n      }\n    }, data);\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/goutham/typescript-sample/src/components/App.tsx"],"names":["React","useEffect","useSelector","useDispatch","actions","thunkSendMessage","App","dispatch","planetAction","message","state","id","planet","onClick","sampleAction2","logo","map","data"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AACA,SAASC,gBAAT,QAAiC,yBAAjC;;AAEA,OAAO,WAAP;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAChBL,EAAAA,SAAS,CAAC,MAAK;AACbM,IAAAA,QAAQ,CAACH,OAAO,CAACI,YAAT,CAAR;AACD,GAFQ,EAEP,EAFO,CAAT;AAIA,QAAMC,OAAO,GAAGP,WAAW,CAAEQ,KAAD,IAAkBA,KAAK,CAACD,OAAzB,CAA3B;AACA,QAAME,EAAE,GAAGT,WAAW,CAAEQ,KAAD,IAAkBA,KAAK,CAACC,EAAzB,CAAtB;AACA,QAAMC,MAAM,GAACV,WAAW,CAAEQ,KAAD,IAAiBA,KAAK,CAACE,MAAxB,CAAxB;AACA,QAAML,QAAQ,GAAGJ,WAAW,EAA5B;;AAEA,QAAMU,OAAO,GAAG,MAAM;AACpBN,IAAAA,QAAQ,CAACH,OAAO,CAACU,aAAR,CAAsBH,EAAE,GAAG,CAA3B,CAAD,CAAR;AACAJ,IAAAA,QAAQ,CAACF,gBAAgB,CAAC,OAAD,CAAjB,CAAR;AACD,GAHD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEG,GAFH,EAGGI,OAHH,eAIE;AAAK,IAAA,GAAG,EAAEM,IAAV;AAAgB,IAAA,SAAS,EAAC,UAA1B;AAAqC,IAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,SAMG,GANH,EAOGJ,EAPH,eAQE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEE,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,cAaID,MAAM,CAACI,GAAP,CAAYC,IAAD,IAAU;AACpB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAL,CAAP;AACA,GAFD,CAbJ,CADF,CADF;AAwBD,CAtCD;;AAwCA,eAAeX,GAAf","sourcesContent":["import React,{useEffect} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport * as actions from '../actions';\nimport { thunkSendMessage } from '../actions/thunkActions';\nimport logo from '../logo.svg';\nimport './App.css';\nimport { State } from '../reducers';\n\nconst App = () => {\n  useEffect(() =>{\n    dispatch(actions.planetAction)\n  },[]\n  )\n  const message = useSelector((state: State) => state.message);\n  const id = useSelector((state: State) => state.id);\n  const planet=useSelector((state:State) => state.planet)\n  const dispatch = useDispatch();\n\n  const onClick = () => {\n    dispatch(actions.sampleAction2(id + 1));\n    dispatch(thunkSendMessage('hello'));\n  };\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        message:\n        {' '}\n        {message}\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        id:\n        {' '}\n        {id}\n        <button type=\"button\" onClick={onClick}>\n          increment id\n        </button>\n        planets:\n        {\n          planet.map((data) => {\n           return <h1>{data}</h1>\n          }\n          )\n        }\n        \n      </header>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}