{"ast":null,"code":"import { combineReducers } from 'redux';\nimport * as actionTypes from '../actions/types';\nconst initialState = {\n  planets: []\n};\nexport default combineReducers({\n  message: (state = '', action) => {\n    switch (action.type) {\n      case actionTypes.SAMPLE_ACTION:\n        return action.payload;\n\n      default:\n        return state;\n    }\n  },\n  id: (state = 0, action) => {\n    switch (action.type) {\n      case actionTypes.SAMPLE_ACTION2:\n        return action.payload;\n\n      default:\n        return state;\n    }\n  },\n  planet: (state = initialState, action) => {\n    switch (action.type) {\n      case actionTypes.PLANET_ACTION:\n        return {\n          planets: [...state.planets, action.payload]\n        };\n\n      default:\n        return state;\n    }\n  }\n});","map":{"version":3,"sources":["/home/goutham/typescript-sample/src/reducers/index.ts"],"names":["combineReducers","actionTypes","initialState","planets","message","state","action","type","SAMPLE_ACTION","payload","id","SAMPLE_ACTION2","planet","PLANET_ACTION"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AAGA,OAAO,KAAKC,WAAZ,MAA6B,kBAA7B;AAUA,MAAMC,YAAyB,GAAE;AAC7BC,EAAAA,OAAO,EAAC;AADqB,CAAjC;AAIA,eAAeH,eAAe,CAAsB;AAClDI,EAAAA,OAAO,EAAE,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC/B,YAAQA,MAAM,CAACC,IAAf;AACE,WAAKN,WAAW,CAACO,aAAjB;AACE,eAAOF,MAAM,CAACG,OAAd;;AACF;AACE,eAAOJ,KAAP;AAJJ;AAMD,GARiD;AASlDK,EAAAA,EAAE,EAAE,CAACL,KAAK,GAAG,CAAT,EAAYC,MAAZ,KAAuB;AACzB,YAAQA,MAAM,CAACC,IAAf;AACE,WAAKN,WAAW,CAACU,cAAjB;AACE,eAAOL,MAAM,CAACG,OAAd;;AACF;AACE,eAAOJ,KAAP;AAJJ;AAMD,GAhBiD;AAiBlDO,EAAAA,MAAM,EAAC,CAACP,KAAK,GAACH,YAAP,EAAoBI,MAApB,KAA+B;AACpC,YAAQA,MAAM,CAACC,IAAf;AACI,WAAKN,WAAW,CAACY,aAAjB;AACI,eAAO;AACHV,UAAAA,OAAO,EAAC,CAAC,GAAGE,KAAK,CAACF,OAAV,EAAkBG,MAAM,CAACG,OAAzB;AADL,SAAP;;AAGJ;AACI,eAAOJ,KAAP;AANR;AAQD;AA1BiD,CAAtB,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\n\nimport { ReduxActions } from '../actions';\nimport * as actionTypes from '../actions/types';\n\nexport type State = {\n  message: string;\n  id: number;\n  planet:PlanetState;\n};\ninterface PlanetState {\n    planets:actionTypes.Planet[]\n}\nconst initialState :PlanetState ={\n    planets:[]\n}\n\nexport default combineReducers<State, ReduxActions>({\n  message: (state = '', action) => {\n    switch (action.type) {\n      case actionTypes.SAMPLE_ACTION:\n        return action.payload;\n      default:\n        return state;\n    }\n  },\n  id: (state = 0, action) => {\n    switch (action.type) {\n      case actionTypes.SAMPLE_ACTION2:\n        return action.payload;\n      default:\n        return state;\n    }\n  },\n  planet:(state=initialState,action) => {\n    switch (action.type) {\n        case actionTypes.PLANET_ACTION:\n            return {\n                planets:[...state.planets,action.payload]\n            }\n        default:\n            return state;    \n    }\n  }\n    \n});\n"]},"metadata":{},"sourceType":"module"}