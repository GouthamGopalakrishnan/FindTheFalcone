{"ast":null,"code":"var _jsxFileName = \"/home/goutham/typescript-sample/src/components/Selection.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as actions from \"../actions\";\nimport { thunkSendMessage, planetsApi, VehiclesApi, GetTokenFromApi } from \"../actions/thunkActions\";\nimport logo from \"../logo.svg\";\nimport \"./App.css\";\n\nconst Selection = () => {\n  const message = useSelector(state => state.message);\n  const id = useSelector(state => state.id);\n  const allPlanets = useSelector(state => state.planet);\n  const vehicle = useSelector(state => state.vehicle);\n  const dispatch = useDispatch();\n  const [selectedPlanets, setPlanets] = useState([]);\n  useEffect(() => {\n    dispatch(GetTokenFromApi());\n    dispatch(planetsApi());\n    dispatch(VehiclesApi());\n  }, []);\n\n  const onClick = () => {\n    dispatch(actions.sampleAction2(id + 1));\n    dispatch(thunkSendMessage(\"hello\"));\n  }; // const showPlanets = () => {\n  //   // const selectedPlanet = event.currentTarget.value;\n  //   // setPlanets([...planets, selectedPlanet]);\n  //   // const planetList = planet.filter((data) => !planets.includes(data.name));\n  //   const list = planet.map((data) => (\n  //     <>\n  //       <option id={data.name} value={data.name}>{data.name}</option>\n  //     </>\n  //   ));\n  //   return list;\n  // };\n\n\n  const onSelectPlanet = event => {\n    const selectedPlanet = event.currentTarget.value;\n    const index = Number(event.currentTarget.id);\n    console.log(index, selectedPlanet);\n    selectedPlanets[index] = selectedPlanet;\n    setPlanets([...selectedPlanets]);\n    console.log(\"onSelectPlanet::\", selectedPlanets); // const planetList = planet.filter((data) => !planets.includes(data.name));\n    // console.log(planetList);\n    // const list = planetList.map((data) => (\n    //   <>\n    //     <option id={data.name}>{data.name}</option>\n    //   </>\n    // ));\n    // return list;\n  };\n\n  const showPlanets2 = currentIndex => {\n    const planetList = allPlanets.filter(planet => !selectedPlanets.includes(planet.name));\n    const options = [];\n    selectedPlanets[currentIndex] ? options.push( /*#__PURE__*/React.createElement(\"option\", {\n      value: selectedPlanets[currentIndex],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, selectedPlanets[currentIndex])) : \"\";\n    const list = planetList.map((data, index) => /*#__PURE__*/React.createElement(\"option\", {\n      value: data.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, data.name));\n    console.log(\"showPlanets::\", [...options, ...list]);\n    return [...options, ...list];\n  };\n\n  const onPlanetChange = e => {\n    console.log(e.currentTarget.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"message: \", message, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }), \"id: \", id, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"increment id\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    id: \"0\",\n    value: selectedPlanets[0],\n    onChange: onSelectPlanet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, showPlanets2(0))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    id: \"1\",\n    onChange: onSelectPlanet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, showPlanets2())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    id: \"2\",\n    onClick: showPlanets2,\n    onChange: onSelectPlanet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, showPlanets2())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    id: \"3\",\n    onClick: showPlanets2,\n    onChange: onSelectPlanet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, showPlanets2()))))));\n};\n\nexport default Selection;","map":{"version":3,"sources":["/home/goutham/typescript-sample/src/components/Selection.tsx"],"names":["React","useEffect","useState","useSelector","useDispatch","actions","thunkSendMessage","planetsApi","VehiclesApi","GetTokenFromApi","Selection","message","state","id","allPlanets","planet","vehicle","dispatch","selectedPlanets","setPlanets","onClick","sampleAction2","onSelectPlanet","event","selectedPlanet","currentTarget","value","index","Number","console","log","showPlanets2","currentIndex","planetList","filter","includes","name","options","push","list","map","data","onPlanetChange","e","logo"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, ChangeEvent } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport * as actions from \"../actions\";\nimport {\n  thunkSendMessage,\n  planetsApi,\n  VehiclesApi,\n  GetTokenFromApi,\n} from \"../actions/thunkActions\";\nimport logo from \"../logo.svg\";\nimport \"./App.css\";\nimport { State } from \"../reducers\";\n\nconst Selection = () => {\n  const message = useSelector((state: State) => state.message);\n  const id = useSelector((state: State) => state.id);\n  const allPlanets = useSelector((state: State) => state.planet);\n  const vehicle = useSelector((state: State) => state.vehicle);\n  const dispatch = useDispatch();\n\n  const [selectedPlanets, setPlanets] = useState<Array<string>>([]);\n\n  useEffect(() => {\n    dispatch(GetTokenFromApi());\n    dispatch(planetsApi());\n    dispatch(VehiclesApi());\n  }, []);\n\n  const onClick = () => {\n    dispatch(actions.sampleAction2(id + 1));\n    dispatch(thunkSendMessage(\"hello\"));\n  };\n\n  // const showPlanets = () => {\n  //   // const selectedPlanet = event.currentTarget.value;\n  //   // setPlanets([...planets, selectedPlanet]);\n  //   // const planetList = planet.filter((data) => !planets.includes(data.name));\n  //   const list = planet.map((data) => (\n  //     <>\n  //       <option id={data.name} value={data.name}>{data.name}</option>\n  //     </>\n\n  //   ));\n  //   return list;\n  // };\n  const onSelectPlanet = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const selectedPlanet = event.currentTarget.value;\n    const index = Number(event.currentTarget.id);\n    console.log(index, selectedPlanet);\n    selectedPlanets[index] = selectedPlanet;\n    setPlanets([...selectedPlanets]);\n    console.log(\"onSelectPlanet::\", selectedPlanets);\n    // const planetList = planet.filter((data) => !planets.includes(data.name));\n    // console.log(planetList);\n    // const list = planetList.map((data) => (\n    //   <>\n    //     <option id={data.name}>{data.name}</option>\n    //   </>\n\n    // ));\n    // return list;\n  };\n\n  const showPlanets2 = (currentIndex: number) => {\n    const planetList = allPlanets.filter(\n      (planet) => !selectedPlanets.includes(planet.name)\n    );\n    const options = [];\n    selectedPlanets[currentIndex]\n      ? options.push(\n          <option value={selectedPlanets[currentIndex]}>\n            {selectedPlanets[currentIndex]}\n          </option>\n        )\n      : \"\";\n    const list = planetList.map((data, index) => (\n      <option value={data.name}>{data.name}</option>\n    ));\n    \n    console.log(\"showPlanets::\", [...options, ...list]);\n    return [...options, ...list];\n  };\n\n  const onPlanetChange = (e: ChangeEvent<HTMLSelectElement>) => {\n    console.log(e.currentTarget.value);\n  };\n\n  return (\n    <div>\n      <div className='App'>\n        <header className='App-header'>\n          message: {message}\n          <img src={logo} className='App-logo' alt='logo' />\n          id: {id}\n          <button type='button' onClick={onClick}>\n            increment id\n          </button>\n          <div className='row'>\n            <div className='col'>\n              <select\n                id='0'\n                value={selectedPlanets[0]}\n                onChange={onSelectPlanet}\n              >\n                {/* <option selected>{selectedPlanets[0]}</option> */}\n\n                {showPlanets2(0)}\n              </select>\n            </div>\n            <div className='col'>\n              <select id='1' onChange={onSelectPlanet}>\n                {/* <option selected>{selectedPlanets[1]}</option> */}\n                {showPlanets2()}\n              </select>\n            </div>\n            <div className='col'>\n              <select id='2' onClick={showPlanets2} onChange={onSelectPlanet}>\n                {showPlanets2()}\n              </select>\n            </div>\n            <div className='col'>\n              <select id='3' onClick={showPlanets2} onChange={onSelectPlanet}>\n                {showPlanets2()}\n              </select>\n            </div>\n          </div>\n        </header>\n      </div>\n    </div>\n  );\n};\nexport default Selection;\n"]},"metadata":{},"sourceType":"module"}