{"ast":null,"code":"import _regeneratorRuntime from\"/home/goutham/typescript-sample/FindTheFalcon/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/goutham/typescript-sample/FindTheFalcon/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import*as actions from'./index';export var planetsApi=function planetsApi(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var planetFetch;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch('https://findfalcone.herokuapp.com/planets').then(function(response){return response.json();});case 2:planetFetch=_context.sent;console.log(planetFetch);dispatch(actions.fetchPlanets(planetFetch));case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var VehiclesApi=function VehiclesApi(){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var vehicleFetch;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch('https://findfalcone.herokuapp.com/vehicles').then(function(response){return response.json();});case 2:vehicleFetch=_context2.sent;dispatch(actions.fetchVehicles(vehicleFetch));case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var GetTokenFromApi=function GetTokenFromApi(){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var tokenFetch;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return fetch('https://findfalcone.herokuapp.com/token',{headers:{Accept:'application/json'},method:'POST'}).then(function(response){return response.json();});case 2:tokenFetch=_context3.sent;console.log(tokenFetch);dispatch(actions.getToken(tokenFetch));case 5:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var GetResultFromApi=function GetResultFromApi(selectedData){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var fetchResult;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:console.log('SelectedConsole:::',selectedData);_context4.next=3;return fetch('https://findfalcone.herokuapp.com/find',{method:'POST',headers:{Accept:'application/json','Content-Type':'application/json'},body:JSON.stringify(selectedData)}).then(function(response){return response.json();});case 3:fetchResult=_context4.sent;console.log(fetchResult);dispatch(actions.getResult(fetchResult));case 6:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x4){return _ref4.apply(this,arguments);};}();};","map":{"version":3,"sources":["/home/goutham/typescript-sample/FindTheFalcon/src/actions/thunkActions.ts"],"names":["actions","planetsApi","dispatch","fetch","then","response","json","planetFetch","console","log","fetchPlanets","VehiclesApi","vehicleFetch","fetchVehicles","GetTokenFromApi","headers","Accept","method","tokenFetch","getToken","GetResultFromApi","selectedData","body","JSON","stringify","fetchResult","getResult"],"mappings":"qUAGA,MAAO,GAAKA,CAAAA,OAAZ,KAAyB,SAAzB,CAOA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,kGAC8B,iBAAOC,QAAP,wJACnBC,CAAAA,KAAK,CAAC,2CAAD,CAAL,CAChCC,IADgC,CAC3B,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAT,EAAd,EAD2B,CADmB,QAChDC,WADgD,eAItDC,OAAO,CAACC,GAAR,CAAYF,WAAZ,EACAL,QAAQ,CAACF,OAAO,CAACU,YAAR,CAAqBH,WAArB,CAAD,CAAR,CALsD,sDAD9B,gEAAnB,CASP,MAAO,IAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,mGAC4B,kBAAOT,QAAP,8JAChBC,CAAAA,KAAK,CAAC,4CAAD,CAAL,CAClCC,IADkC,CAC7B,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAT,EAAd,EAD6B,CADgB,QAC/CM,YAD+C,gBAGrDV,QAAQ,CAACF,OAAO,CAACa,aAAR,CAAsBD,YAAtB,CAAD,CAAR,CAHqD,wDAD5B,kEAApB,CAOP,MAAO,IAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,mGACwB,kBAAOZ,QAAP,4JACrBC,CAAAA,KAAK,CAAC,yCAAD,CAA4C,CAAEY,OAAO,CAAE,CAAEC,MAAM,CAAE,kBAAV,CAAX,CAA2CC,MAAM,CAAE,MAAnD,CAA5C,CAAL,CAC7Bb,IAD6B,CACxB,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAT,EAAd,EADwB,CADqB,QAC/CY,UAD+C,gBAGrDV,OAAO,CAACC,GAAR,CAAYS,UAAZ,EACAhB,QAAQ,CAACF,OAAO,CAACmB,QAAR,CAAiBD,UAAjB,CAAD,CAAR,CAJqD,wDADxB,kEAAxB,CAQP,MAAO,IAAME,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAC9BC,YAD8B,kGAEuB,kBAAOnB,QAAP,sIACrDM,OAAO,CAACC,GAAR,CAAY,oBAAZ,CAAkCY,YAAlC,EADqD,uBAEpBlB,CAAAA,KAAK,CAAC,wCAAD,CACpC,CACEc,MAAM,CAAE,MADV,CAEEF,OAAO,CAAE,CAAEC,MAAM,CAAE,kBAAV,CAA8B,eAAgB,kBAA9C,CAFX,CAGEM,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeH,YAAf,CAHR,CADoC,CAAL,CAM9BjB,IAN8B,CAMzB,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAT,EAAd,EANyB,CAFoB,QAE/CmB,WAF+C,gBASrDjB,OAAO,CAACC,GAAR,CAAYgB,WAAZ,EACAvB,QAAQ,CAACF,OAAO,CAAC0B,SAAR,CAAkBD,WAAlB,CAAD,CAAR,CAVqD,wDAFvB,kEAAzB","sourcesContent":["import { Action } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\n\nimport * as actions from './index';\nimport { State } from '../reducers';\nimport {\n  Planet, Vehicle, Result,\n} from '../types/types';\n\n\nexport const planetsApi = (\n): ThunkAction<void, State, unknown, Action<string>> => async (dispatch) => {\n  const planetFetch:Planet[] = await fetch('https://findfalcone.herokuapp.com/planets')\n    .then((response) => response.json());\n\n  console.log(planetFetch);\n  dispatch(actions.fetchPlanets(planetFetch));\n};\n\nexport const VehiclesApi = (\n):ThunkAction<void, State, unknown, Action<string>> => async (dispatch) => {\n  const vehicleFetch:Vehicle[] = await fetch('https://findfalcone.herokuapp.com/vehicles')\n    .then((response) => response.json());\n  dispatch(actions.fetchVehicles(vehicleFetch));\n};\n\nexport const GetTokenFromApi = (\n):ThunkAction<void, State, unknown, Action<string>> => async (dispatch) => {\n  const tokenFetch:string = await fetch('https://findfalcone.herokuapp.com/token', { headers: { Accept: 'application/json' }, method: 'POST' })\n    .then((response) => response.json());\n  console.log(tokenFetch);\n  dispatch(actions.getToken(tokenFetch));\n};\n\nexport const GetResultFromApi = (\n  selectedData:object,\n):ThunkAction<void, State, unknown, Action<string>> => async (dispatch) => {\n  console.log('SelectedConsole:::', selectedData);\n  const fetchResult:Result = await fetch('https://findfalcone.herokuapp.com/find',\n    {\n      method: 'POST',\n      headers: { Accept: 'application/json', 'Content-Type': 'application/json' },\n      body: JSON.stringify(selectedData),\n    })\n    .then((response) => response.json());\n  console.log(fetchResult);\n  dispatch(actions.getResult(fetchResult));\n};\n"]},"metadata":{},"sourceType":"module"}