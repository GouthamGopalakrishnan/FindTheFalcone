{"ast":null,"code":"var _jsxFileName = \"/home/goutham/typescript-sample/src/components/Selection.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Select, Layout, Button } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { planetsApi, VehiclesApi, GetTokenFromApi, GetResultFromApi } from '../actions/thunkActions';\nimport logo from './Logo.png';\nimport './App.css';\nimport SelectPlanet from './SelectPlanet';\nconst {\n  Header,\n  Content,\n  Footer\n} = Layout;\nconst {\n  Option\n} = Select;\nconst radioStyle = {\n  display: 'block',\n  height: '30px',\n  lineHeight: '30px'\n};\n\nconst Selection = () => {\n  // const message = useSelector((state: State) => state.message);\n  // const id = useSelector((state: State) => state.id);\n  const allPlanets = useSelector(state => state.planet);\n  const allVehicles = useSelector(state => state.vehicle);\n  const tokens = useSelector(state => state.token);\n  const dispatch = useDispatch();\n  const [selectedPlanets, setPlanets] = useState([]);\n  const [planetArray, setArray] = useState([]);\n  const [selectedVehicle, setVehicle] = useState([]);\n  const [vehicleArray, setVehicleArray] = useState([]);\n  const [time, setTime] = useState(0);\n  const [selectedPlanetsArray, setSelectedPlanetsArray] = useState([]);\n  useEffect(() => {\n    dispatch(GetTokenFromApi());\n    dispatch(planetsApi());\n    dispatch(VehiclesApi());\n  }, []); // const onClick = () => {\n  //   dispatch(actions.sampleAction2(id + 1));\n  //   dispatch(thunkSendMessage(\"hello\"));\n  // };\n  // const onSelectPlanet = (event: React.ChangeEvent<HTMLSelectElement>) => {\n  //   const selectedPlanet = event.currentTarget.value;\n  //   const planetDistance = allPlanets.filter(\n  //     (planet) => planet.name === selectedPlanet,\n  //   );\n  //   const index = Number(event.currentTarget.id);\n  //   planetArray[index] = planetDistance[0];\n  //   setArray([...planetArray]);\n  //   const vehilceList = listVehiclesAt(index);\n  //   selectedPlanets[index] = selectedPlanet;\n  //   setPlanets([...selectedPlanets]);\n  //   return vehilceList;\n  // };\n  // const listPlanetOptionsAt = (currentIndex: number) => {\n  //   const planetList = allPlanets.filter(\n  //     (planet) => selectedPlanets[currentIndex] === planet.name\n  //       || !selectedPlanets.includes(planet.name),\n  //   );\n  //   const list = planetList.map((data, index) => (\n  //     <option value={data.name}>{data.name}</option>\n  //   ));\n  //   return list;\n  // };\n  // const listVehiclesAt = (currentIndex: number) => {\n  //   const { distance } = planetArray[currentIndex];\n  //   // const vehicleList = allVehicles.filter(\n  //   //   (vehicle) => vehicle.max_distance >= distance,\n  //   // );\n  //   const vehicleOptions = allVehicles.map((vehicle) => (\n  //     vehicle.max_distance >= distance && vehicle.total_no > 0 ? (\n  //       <Radio style={radioStyle} value={vehicle.name}>\n  //         {vehicle.name}\n  //         (\n  //         {vehicle.total_no}\n  //         )\n  //       </Radio>\n  //     )\n  //       : (\n  //         <Radio style={radioStyle} value={vehicle.name} disabled>\n  //           {vehicle.name}\n  //           (\n  //           {vehicle.total_no}\n  //           )\n  //         </Radio>\n  //       )\n  //   ));\n  //   return vehicleOptions;\n  // };\n  // const listVehicles = () => {\n  //   const vehicleOptions = allVehicles.map((vehicle) => (\n  //     <>\n  //       <Radio style={radioStyle} value={vehicle.name}>\n  //         {vehicle.name}\n  //         (\n  //         {vehicle.total_no}\n  //         )\n  //       </Radio>\n  //     </>\n  //   ));\n  //   return vehicleOptions;\n  // };\n\n  const vehicleOnChange = e => {\n    const optionSelected = e.target.value;\n    const allSelectedPlanets = allVehicles.filter(vehicle => vehicle.name === optionSelected);\n    const currentIndex = Number(e.target.name);\n    vehicleArray[currentIndex] = allSelectedPlanets[0];\n    setVehicleArray([...vehicleArray]);\n    console.log('selected Vehicles ::', vehicleArray);\n    const prevOption = selectedVehicle[currentIndex];\n    selectedVehicle[currentIndex] = optionSelected;\n    setVehicle([...selectedVehicle]);\n    calculateTime(currentIndex, prevOption, optionSelected);\n\n    if (prevOption != optionSelected && prevOption != undefined) {\n      const indexOfVehicle = allVehicles.map(e => e.name).indexOf(prevOption);\n      allVehicles[indexOfVehicle].total_no = allVehicles[indexOfVehicle].total_no + 1;\n      const indexOfVehicle2 = allVehicles.map(e => e.name).indexOf(optionSelected);\n      allVehicles[indexOfVehicle2].total_no = allVehicles[indexOfVehicle2].total_no - 1;\n    } else {\n      const indexOfVehicle = allVehicles.map(e => e.name).indexOf(optionSelected);\n      allVehicles[indexOfVehicle].total_no = allVehicles[indexOfVehicle].total_no - 1;\n    }\n  };\n\n  const calculateTime = (index, previousOption, optionSelected) => {\n    if (optionSelected !== previousOption && previousOption !== undefined) {\n      const prevTimeIndex = allVehicles.map(e => e.name).indexOf(previousOption);\n      const prevTime = planetArray[index].distance / allVehicles[prevTimeIndex].speed;\n      const indexTime = time + planetArray[index].distance / vehicleArray[index].speed - prevTime;\n      setTime(indexTime);\n    } else {\n      const indextime = time + planetArray[index].distance / vehicleArray[index].speed;\n      setTime(indextime);\n    }\n  };\n\n  const findFalcone = () => {\n    const tokenValue = String(Object.values(tokens));\n    const selectedData = {\n      token: tokenValue,\n      planet_names: selectedPlanetsArray,\n      vehicle_names: selectedVehicle\n    };\n    dispatch(GetResultFromApi(selectedData));\n    console.log(selectedData);\n  };\n\n  const onSelectChange = (value, currentIndex) => {\n    const selectedPlanet = value;\n    const planetDistance = allPlanets.filter(planet => planet.name === selectedPlanet);\n    const index = currentIndex;\n    planetArray[index] = planetDistance[0];\n    setArray([...planetArray]); // const vehilceList = listVehiclesAt(index);\n    // selectedPlanetsArray[index] ===undefined ? \"\" : calculateTime(index,);\n\n    selectedPlanetsArray[index] = selectedPlanet;\n    setSelectedPlanetsArray([...selectedPlanetsArray]);\n    console.log('parent Componet ::', value, selectedPlanetsArray); // return vehilceList;\n  };\n\n  const vehicleOnChangeinSelectPlanet = e => {\n    const optionSelected = e.target.value;\n    const allSelectedPlanets = allVehicles.filter(vehicle => vehicle.name === optionSelected);\n    const currentIndex = Number(e.target.name);\n    vehicleArray[currentIndex] = allSelectedPlanets[0];\n    setVehicleArray([...vehicleArray]);\n    console.log('selected Vehicles ::', vehicleArray);\n    const prevOption = selectedVehicle[currentIndex];\n    selectedVehicle[currentIndex] = optionSelected;\n    setVehicle([...selectedVehicle]);\n    calculateTime(currentIndex, prevOption, optionSelected);\n\n    if (prevOption != optionSelected && prevOption != undefined) {\n      const indexOfVehicle = allVehicles.map(e => e.name).indexOf(prevOption);\n      allVehicles[indexOfVehicle].total_no = allVehicles[indexOfVehicle].total_no + 1;\n      const indexOfVehicle2 = allVehicles.map(e => e.name).indexOf(optionSelected);\n      allVehicles[indexOfVehicle2].total_no = allVehicles[indexOfVehicle2].total_no - 1;\n    } else {\n      const indexOfVehicle = allVehicles.map(e => e.name).indexOf(optionSelected);\n      allVehicles[indexOfVehicle].total_no = allVehicles[indexOfVehicle].total_no - 1;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"falcone-main-layout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Layout, {\n    className: \"layout \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"falcone-logo\",\n    src: logo,\n    alt: \"falcone-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"finding-falcone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 15\n    }\n  }, \"FINDING FALCONE\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"finding-falcone-restart float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"finding-falcone-restart-link\",\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }, \"RESTART\")))), /*#__PURE__*/React.createElement(Content, {\n    style: {\n      padding: '0 50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"site-layout-content falcone-row-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"falcone-text text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 15\n    }\n  }, \"Select 4 planets and the space vehicles to search in these planets\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"float-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 15\n    }\n  }, \"TIME TAKEN:\", time), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectPlanet, {\n    index: 0,\n    onSelectPlanetChange: onSelectChange,\n    planets: selectedPlanetsArray,\n    planetsArray: planetArray,\n    handleRadioChange: vehicleOnChangeinSelectPlanet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col falcone-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectPlanet, {\n    index: 1,\n    onSelectPlanetChange: onSelectChange,\n    planets: selectedPlanetsArray,\n    planetsArray: planetArray,\n    handleRadioChange: vehicleOnChangeinSelectPlanet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectPlanet, {\n    index: 2,\n    onSelectPlanetChange: onSelectChange,\n    planets: selectedPlanetsArray,\n    planetsArray: planetArray,\n    handleRadioChange: vehicleOnChangeinSelectPlanet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectPlanet, {\n    index: 3,\n    onSelectPlanetChange: onSelectChange,\n    planets: selectedPlanetsArray,\n    planetsArray: planetArray,\n    handleRadioChange: vehicleOnChangeinSelectPlanet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 19\n    }\n  }))), selectedVehicle.filter(value => value !== undefined).length !== 4 ? '' : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: findFalcone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/result\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 25\n    }\n  }, \" FIND FALCONE\")))))), /*#__PURE__*/React.createElement(Footer, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 11\n    }\n  }, \"Created for GeekTrust\"))));\n};\n\nexport default Selection;","map":{"version":3,"sources":["/home/goutham/typescript-sample/src/components/Selection.tsx"],"names":["React","useEffect","useState","useSelector","useDispatch","Select","Layout","Button","Link","planetsApi","VehiclesApi","GetTokenFromApi","GetResultFromApi","logo","SelectPlanet","Header","Content","Footer","Option","radioStyle","display","height","lineHeight","Selection","allPlanets","state","planet","allVehicles","vehicle","tokens","token","dispatch","selectedPlanets","setPlanets","planetArray","setArray","selectedVehicle","setVehicle","vehicleArray","setVehicleArray","time","setTime","selectedPlanetsArray","setSelectedPlanetsArray","vehicleOnChange","e","optionSelected","target","value","allSelectedPlanets","filter","name","currentIndex","Number","console","log","prevOption","calculateTime","undefined","indexOfVehicle","map","indexOf","total_no","indexOfVehicle2","index","previousOption","prevTimeIndex","prevTime","distance","speed","indexTime","indextime","findFalcone","tokenValue","String","Object","values","selectedData","planet_names","vehicle_names","onSelectChange","selectedPlanet","planetDistance","vehicleOnChangeinSelectPlanet","padding","length","textAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAAwD,OAAxD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,MADF,EACiBC,MADjB,EACyBC,MADzB,QAEO,MAFP;AAIA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAEEC,UAFF,EAGEC,WAHF,EAIEC,eAJF,EAKEC,gBALF,QAMO,yBANP;AAQA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AAGA,OAAOC,YAAP,MAAyB,gBAAzB;AAIA,MAAM;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,OAAV;AAAmBC,EAAAA;AAAnB,IAA8BX,MAApC;AACA,MAAM;AAAEY,EAAAA;AAAF,IAAab,MAAnB;AAEA,MAAMc,UAAU,GAAG;AACjBC,EAAAA,OAAO,EAAE,OADQ;AAEjBC,EAAAA,MAAM,EAAE,MAFS;AAGjBC,EAAAA,UAAU,EAAE;AAHK,CAAnB;;AAKA,MAAMC,SAAS,GAAG,MAAM;AACtB;AACA;AACA,QAAMC,UAAU,GAAGrB,WAAW,CAAEsB,KAAD,IAAkBA,KAAK,CAACC,MAAzB,CAA9B;AACA,QAAMC,WAAW,GAAGxB,WAAW,CAAEsB,KAAD,IAAkBA,KAAK,CAACG,OAAzB,CAA/B;AACA,QAAMC,MAAM,GAAG1B,WAAW,CAAEsB,KAAD,IAAkBA,KAAK,CAACK,KAAzB,CAA1B;AACA,QAAMC,QAAQ,GAAG3B,WAAW,EAA5B;AAEA,QAAM,CAAC4B,eAAD,EAAkBC,UAAlB,IAAgC/B,QAAQ,CAAgB,EAAhB,CAA9C;AACA,QAAM,CAACgC,WAAD,EAAcC,QAAd,IAA0BjC,QAAQ,CAAW,EAAX,CAAxC;AACA,QAAM,CAACkC,eAAD,EAAkBC,UAAlB,IAAgCnC,QAAQ,CAAgB,EAAhB,CAA9C;AACA,QAAM,CAACoC,YAAD,EAAeC,eAAf,IAAkCrC,QAAQ,CAAY,EAAZ,CAAhD;AACA,QAAM,CAACsC,IAAD,EAAOC,OAAP,IAAkBvC,QAAQ,CAAS,CAAT,CAAhC;AACA,QAAM,CAACwC,oBAAD,EAAuBC,uBAAvB,IAAkDzC,QAAQ,CAC9D,EAD8D,CAAhE;AAIAD,EAAAA,SAAS,CAAC,MAAM;AACd8B,IAAAA,QAAQ,CAACpB,eAAe,EAAhB,CAAR;AACAoB,IAAAA,QAAQ,CAACtB,UAAU,EAAX,CAAR;AACAsB,IAAAA,QAAQ,CAACrB,WAAW,EAAZ,CAAR;AACD,GAJQ,EAIN,EAJM,CAAT,CAjBsB,CAuBtB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMkC,eAAe,GAAIC,CAAD,IAAyB;AAC/C,UAAMC,cAAc,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAhC;AACA,UAAMC,kBAAkB,GAAGtB,WAAW,CAACuB,MAAZ,CACxBtB,OAAD,IAAaA,OAAO,CAACuB,IAAR,KAAiBL,cADL,CAA3B;AAGA,UAAMM,YAAY,GAAGC,MAAM,CAACR,CAAC,CAACE,MAAF,CAASI,IAAV,CAA3B;AACAb,IAAAA,YAAY,CAACc,YAAD,CAAZ,GAA6BH,kBAAkB,CAAC,CAAD,CAA/C;AACAV,IAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,CAAD,CAAf;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCjB,YAApC;AACA,UAAMkB,UAAU,GAAGpB,eAAe,CAACgB,YAAD,CAAlC;AACAhB,IAAAA,eAAe,CAACgB,YAAD,CAAf,GAAgCN,cAAhC;AACAT,IAAAA,UAAU,CAAC,CAAC,GAAGD,eAAJ,CAAD,CAAV;AACAqB,IAAAA,aAAa,CAACL,YAAD,EAAeI,UAAf,EAA2BV,cAA3B,CAAb;;AACA,QAAIU,UAAU,IAAIV,cAAd,IAAgCU,UAAU,IAAIE,SAAlD,EAA6D;AAC3D,YAAMC,cAAc,GAAGhC,WAAW,CAACiC,GAAZ,CAAiBf,CAAD,IAAOA,CAAC,CAACM,IAAzB,EAA+BU,OAA/B,CAAuCL,UAAvC,CAAvB;AACA7B,MAAAA,WAAW,CAACgC,cAAD,CAAX,CAA4BG,QAA5B,GAAuCnC,WAAW,CAACgC,cAAD,CAAX,CAA4BG,QAA5B,GAAuC,CAA9E;AACA,YAAMC,eAAe,GAAGpC,WAAW,CAChCiC,GADqB,CAChBf,CAAD,IAAOA,CAAC,CAACM,IADQ,EAErBU,OAFqB,CAEbf,cAFa,CAAxB;AAGAnB,MAAAA,WAAW,CAACoC,eAAD,CAAX,CAA6BD,QAA7B,GAAwCnC,WAAW,CAACoC,eAAD,CAAX,CAA6BD,QAA7B,GAAwC,CAAhF;AACD,KAPD,MAOO;AACL,YAAMH,cAAc,GAAGhC,WAAW,CAC/BiC,GADoB,CACff,CAAD,IAAOA,CAAC,CAACM,IADO,EAEpBU,OAFoB,CAEZf,cAFY,CAAvB;AAGAnB,MAAAA,WAAW,CAACgC,cAAD,CAAX,CAA4BG,QAA5B,GAAuCnC,WAAW,CAACgC,cAAD,CAAX,CAA4BG,QAA5B,GAAuC,CAA9E;AACD;AACF,GA1BD;;AA2BA,QAAML,aAAa,GAAG,CACpBO,KADoB,EAEpBC,cAFoB,EAGpBnB,cAHoB,KAIjB;AACH,QAAIA,cAAc,KAAKmB,cAAnB,IAAqCA,cAAc,KAAKP,SAA5D,EAAuE;AACrE,YAAMQ,aAAa,GAAGvC,WAAW,CAC9BiC,GADmB,CACdf,CAAD,IAAOA,CAAC,CAACM,IADM,EAEnBU,OAFmB,CAEXI,cAFW,CAAtB;AAGA,YAAME,QAAQ,GAAGjC,WAAW,CAAC8B,KAAD,CAAX,CAAmBI,QAAnB,GAA8BzC,WAAW,CAACuC,aAAD,CAAX,CAA2BG,KAA1E;AACA,YAAMC,SAAS,GAAG9B,IAAI,GAClBN,WAAW,CAAC8B,KAAD,CAAX,CAAmBI,QAAnB,GAA8B9B,YAAY,CAAC0B,KAAD,CAAZ,CAAoBK,KADpC,GAEdF,QAFJ;AAGA1B,MAAAA,OAAO,CAAC6B,SAAD,CAAP;AACD,KATD,MASO;AACL,YAAMC,SAAS,GAAG/B,IAAI,GAAGN,WAAW,CAAC8B,KAAD,CAAX,CAAmBI,QAAnB,GAA8B9B,YAAY,CAAC0B,KAAD,CAAZ,CAAoBK,KAA3E;AACA5B,MAAAA,OAAO,CAAC8B,SAAD,CAAP;AACD;AACF,GAlBD;;AAoBA,QAAMC,WAAW,GAAG,MAAM;AACxB,UAAMC,UAAU,GAAGC,MAAM,CAACC,MAAM,CAACC,MAAP,CAAc/C,MAAd,CAAD,CAAzB;AACA,UAAMgD,YAAY,GAAG;AACnB/C,MAAAA,KAAK,EAAE2C,UADY;AAEnBK,MAAAA,YAAY,EAAEpC,oBAFK;AAGnBqC,MAAAA,aAAa,EAAE3C;AAHI,KAArB;AAMAL,IAAAA,QAAQ,CAACnB,gBAAgB,CAACiE,YAAD,CAAjB,CAAR;AACAvB,IAAAA,OAAO,CAACC,GAAR,CAAYsB,YAAZ;AACD,GAVD;;AAWA,QAAMG,cAAc,GAAG,CAAChC,KAAD,EAAgBI,YAAhB,KAAyC;AAC9D,UAAM6B,cAAc,GAAGjC,KAAvB;AACA,UAAMkC,cAAc,GAAG1D,UAAU,CAAC0B,MAAX,CACpBxB,MAAD,IAAYA,MAAM,CAACyB,IAAP,KAAgB8B,cADP,CAAvB;AAGA,UAAMjB,KAAK,GAAGZ,YAAd;AACAlB,IAAAA,WAAW,CAAC8B,KAAD,CAAX,GAAqBkB,cAAc,CAAC,CAAD,CAAnC;AACA/C,IAAAA,QAAQ,CAAC,CAAC,GAAGD,WAAJ,CAAD,CAAR,CAP8D,CAQ9D;AACA;;AACAQ,IAAAA,oBAAoB,CAACsB,KAAD,CAApB,GAA8BiB,cAA9B;AACAtC,IAAAA,uBAAuB,CAAC,CAAC,GAAGD,oBAAJ,CAAD,CAAvB;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCP,KAAlC,EAAyCN,oBAAzC,EAZ8D,CAa9D;AACD,GAdD;;AAgBA,QAAMyC,6BAA6B,GAAItC,CAAD,IAAyB;AAC7D,UAAMC,cAAc,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAhC;AACA,UAAMC,kBAAkB,GAAGtB,WAAW,CAACuB,MAAZ,CACxBtB,OAAD,IAAaA,OAAO,CAACuB,IAAR,KAAiBL,cADL,CAA3B;AAGA,UAAMM,YAAY,GAAGC,MAAM,CAACR,CAAC,CAACE,MAAF,CAASI,IAAV,CAA3B;AACAb,IAAAA,YAAY,CAACc,YAAD,CAAZ,GAA6BH,kBAAkB,CAAC,CAAD,CAA/C;AACAV,IAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,CAAD,CAAf;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCjB,YAApC;AACA,UAAMkB,UAAU,GAAGpB,eAAe,CAACgB,YAAD,CAAlC;AACAhB,IAAAA,eAAe,CAACgB,YAAD,CAAf,GAAgCN,cAAhC;AACAT,IAAAA,UAAU,CAAC,CAAC,GAAGD,eAAJ,CAAD,CAAV;AACAqB,IAAAA,aAAa,CAACL,YAAD,EAAeI,UAAf,EAA2BV,cAA3B,CAAb;;AACA,QAAIU,UAAU,IAAIV,cAAd,IAAgCU,UAAU,IAAIE,SAAlD,EAA6D;AAC3D,YAAMC,cAAc,GAAGhC,WAAW,CAACiC,GAAZ,CAAiBf,CAAD,IAAOA,CAAC,CAACM,IAAzB,EAA+BU,OAA/B,CAAuCL,UAAvC,CAAvB;AACA7B,MAAAA,WAAW,CAACgC,cAAD,CAAX,CAA4BG,QAA5B,GAAuCnC,WAAW,CAACgC,cAAD,CAAX,CAA4BG,QAA5B,GAAuC,CAA9E;AACA,YAAMC,eAAe,GAAGpC,WAAW,CAChCiC,GADqB,CAChBf,CAAD,IAAOA,CAAC,CAACM,IADQ,EAErBU,OAFqB,CAEbf,cAFa,CAAxB;AAGAnB,MAAAA,WAAW,CAACoC,eAAD,CAAX,CAA6BD,QAA7B,GAAwCnC,WAAW,CAACoC,eAAD,CAAX,CAA6BD,QAA7B,GAAwC,CAAhF;AACD,KAPD,MAOO;AACL,YAAMH,cAAc,GAAGhC,WAAW,CAC/BiC,GADoB,CACff,CAAD,IAAOA,CAAC,CAACM,IADO,EAEpBU,OAFoB,CAEZf,cAFY,CAAvB;AAGAnB,MAAAA,WAAW,CAACgC,cAAD,CAAX,CAA4BG,QAA5B,GAAuCnC,WAAW,CAACgC,cAAD,CAAX,CAA4BG,QAA5B,GAAuC,CAA9E;AACD;AACF,GA1BD;;AA4BA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,GAAG,EAAEjD,IAAnC;AAAyC,IAAA,GAAG,EAAC,cAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,eAGE;AAAG,IAAA,SAAS,EAAC,qCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,8BAAhB;AAA+C,IAAA,EAAE,EAAC,GAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAHF,CADF,CADF,eAYE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE;AAAEuE,MAAAA,OAAO,EAAE;AAAX,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EADF,eAKE;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEG5C,IAFH,CALF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAWE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,KAAK,EAAE,CADT;AAEE,IAAA,oBAAoB,EAAEwC,cAFxB;AAGE,IAAA,OAAO,EAAEtC,oBAHX;AAIE,IAAA,YAAY,EAAER,WAJhB;AAKE,IAAA,iBAAiB,EAAEiD,6BALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAUE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,KAAK,EAAE,CADT;AAEE,IAAA,oBAAoB,EAAEH,cAFxB;AAGE,IAAA,OAAO,EAAEtC,oBAHX;AAIE,IAAA,YAAY,EAAER,WAJhB;AAKE,IAAA,iBAAiB,EAAEiD,6BALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVF,eAmBE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,KAAK,EAAE,CADT;AAEE,IAAA,oBAAoB,EAAEH,cAFxB;AAGE,IAAA,OAAO,EAAEtC,oBAHX;AAIE,IAAA,YAAY,EAAER,WAJhB;AAKE,IAAA,iBAAiB,EAAEiD,6BALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAnBF,eA4BE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,KAAK,EAAE,CADT;AAEE,IAAA,oBAAoB,EAAEH,cAFxB;AAGE,IAAA,OAAO,EAAEtC,oBAHX;AAIE,IAAA,YAAY,EAAER,WAJhB;AAKE,IAAA,iBAAiB,EAAEiD,6BALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA5BF,CAXF,EAiDG/C,eAAe,CAACc,MAAhB,CAAwBF,KAAD,IAAWA,KAAK,KAAKU,SAA5C,EAAuD2B,MAAvD,KACG,CADH,GAEG,EAFH,gBAIG,uDACE;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAEb,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF,CADF,CArDN,CADF,CAZF,eA4EE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEc,MAAAA,SAAS,EAAE;AAAb,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BA5EF,CADF,CADF,CADF;AAoFD,CAzRD;;AA0RA,eAAe/D,SAAf","sourcesContent":["import React, { useEffect, useState, ChangeEvent } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Select, Radio, Layout, Button,\n} from 'antd';\nimport { RadioChangeEvent } from 'antd/lib/radio/interface';\nimport { Link } from 'react-router-dom';\nimport {\n  thunkSendMessage,\n  planetsApi,\n  VehiclesApi,\n  GetTokenFromApi,\n  GetResultFromApi,\n} from '../actions/thunkActions';\n\nimport logo from './Logo.png';\nimport './App.css';\nimport { State } from '../reducers';\nimport { Planet, Vehicle, FalconeData } from '../types/types';\nimport SelectPlanet from './SelectPlanet';\nimport IntroPage from './IntroPage';\nimport FinishPage from './FinishPage';\n\nconst { Header, Content, Footer } = Layout;\nconst { Option } = Select;\n\nconst radioStyle = {\n  display: 'block',\n  height: '30px',\n  lineHeight: '30px',\n};\nconst Selection = () => {\n  // const message = useSelector((state: State) => state.message);\n  // const id = useSelector((state: State) => state.id);\n  const allPlanets = useSelector((state: State) => state.planet);\n  const allVehicles = useSelector((state: State) => state.vehicle);\n  const tokens = useSelector((state: State) => state.token);\n  const dispatch = useDispatch();\n\n  const [selectedPlanets, setPlanets] = useState<Array<string>>([]);\n  const [planetArray, setArray] = useState<Planet[]>([]);\n  const [selectedVehicle, setVehicle] = useState<Array<string>>([]);\n  const [vehicleArray, setVehicleArray] = useState<Vehicle[]>([]);\n  const [time, setTime] = useState<number>(0);\n  const [selectedPlanetsArray, setSelectedPlanetsArray] = useState<string[]>(\n    [],\n  );\n\n  useEffect(() => {\n    dispatch(GetTokenFromApi());\n    dispatch(planetsApi());\n    dispatch(VehiclesApi());\n  }, []);\n\n  // const onClick = () => {\n  //   dispatch(actions.sampleAction2(id + 1));\n  //   dispatch(thunkSendMessage(\"hello\"));\n  // };\n\n  // const onSelectPlanet = (event: React.ChangeEvent<HTMLSelectElement>) => {\n  //   const selectedPlanet = event.currentTarget.value;\n  //   const planetDistance = allPlanets.filter(\n  //     (planet) => planet.name === selectedPlanet,\n  //   );\n  //   const index = Number(event.currentTarget.id);\n  //   planetArray[index] = planetDistance[0];\n  //   setArray([...planetArray]);\n  //   const vehilceList = listVehiclesAt(index);\n  //   selectedPlanets[index] = selectedPlanet;\n  //   setPlanets([...selectedPlanets]);\n  //   return vehilceList;\n  // };\n\n  // const listPlanetOptionsAt = (currentIndex: number) => {\n  //   const planetList = allPlanets.filter(\n  //     (planet) => selectedPlanets[currentIndex] === planet.name\n  //       || !selectedPlanets.includes(planet.name),\n  //   );\n  //   const list = planetList.map((data, index) => (\n  //     <option value={data.name}>{data.name}</option>\n  //   ));\n\n  //   return list;\n  // };\n\n  // const listVehiclesAt = (currentIndex: number) => {\n  //   const { distance } = planetArray[currentIndex];\n\n  //   // const vehicleList = allVehicles.filter(\n  //   //   (vehicle) => vehicle.max_distance >= distance,\n  //   // );\n  //   const vehicleOptions = allVehicles.map((vehicle) => (\n  //     vehicle.max_distance >= distance && vehicle.total_no > 0 ? (\n  //       <Radio style={radioStyle} value={vehicle.name}>\n  //         {vehicle.name}\n  //         (\n  //         {vehicle.total_no}\n  //         )\n  //       </Radio>\n  //     )\n  //       : (\n  //         <Radio style={radioStyle} value={vehicle.name} disabled>\n  //           {vehicle.name}\n  //           (\n  //           {vehicle.total_no}\n  //           )\n  //         </Radio>\n  //       )\n  //   ));\n  //   return vehicleOptions;\n  // };\n\n  // const listVehicles = () => {\n  //   const vehicleOptions = allVehicles.map((vehicle) => (\n  //     <>\n  //       <Radio style={radioStyle} value={vehicle.name}>\n  //         {vehicle.name}\n  //         (\n  //         {vehicle.total_no}\n  //         )\n  //       </Radio>\n  //     </>\n  //   ));\n  //   return vehicleOptions;\n  // };\n\n  const vehicleOnChange = (e: RadioChangeEvent) => {\n    const optionSelected = e.target.value;\n    const allSelectedPlanets = allVehicles.filter(\n      (vehicle) => vehicle.name === optionSelected,\n    );\n    const currentIndex = Number(e.target.name);\n    vehicleArray[currentIndex] = allSelectedPlanets[0];\n    setVehicleArray([...vehicleArray]);\n    console.log('selected Vehicles ::', vehicleArray);\n    const prevOption = selectedVehicle[currentIndex];\n    selectedVehicle[currentIndex] = optionSelected;\n    setVehicle([...selectedVehicle]);\n    calculateTime(currentIndex, prevOption, optionSelected);\n    if (prevOption != optionSelected && prevOption != undefined) {\n      const indexOfVehicle = allVehicles.map((e) => e.name).indexOf(prevOption);\n      allVehicles[indexOfVehicle].total_no = allVehicles[indexOfVehicle].total_no + 1;\n      const indexOfVehicle2 = allVehicles\n        .map((e) => e.name)\n        .indexOf(optionSelected);\n      allVehicles[indexOfVehicle2].total_no = allVehicles[indexOfVehicle2].total_no - 1;\n    } else {\n      const indexOfVehicle = allVehicles\n        .map((e) => e.name)\n        .indexOf(optionSelected);\n      allVehicles[indexOfVehicle].total_no = allVehicles[indexOfVehicle].total_no - 1;\n    }\n  };\n  const calculateTime = (\n    index: number,\n    previousOption: string,\n    optionSelected: string,\n  ) => {\n    if (optionSelected !== previousOption && previousOption !== undefined) {\n      const prevTimeIndex = allVehicles\n        .map((e) => e.name)\n        .indexOf(previousOption);\n      const prevTime = planetArray[index].distance / allVehicles[prevTimeIndex].speed;\n      const indexTime = time\n        + planetArray[index].distance / vehicleArray[index].speed\n        - prevTime;\n      setTime(indexTime);\n    } else {\n      const indextime = time + planetArray[index].distance / vehicleArray[index].speed;\n      setTime(indextime);\n    }\n  };\n\n  const findFalcone = () => {\n    const tokenValue = String(Object.values(tokens));\n    const selectedData = {\n      token: tokenValue,\n      planet_names: selectedPlanetsArray,\n      vehicle_names: selectedVehicle,\n    };\n\n    dispatch(GetResultFromApi(selectedData));\n    console.log(selectedData);\n  };\n  const onSelectChange = (value: string, currentIndex: number) => {\n    const selectedPlanet = value;\n    const planetDistance = allPlanets.filter(\n      (planet) => planet.name === selectedPlanet,\n    );\n    const index = currentIndex;\n    planetArray[index] = planetDistance[0];\n    setArray([...planetArray]);\n    // const vehilceList = listVehiclesAt(index);\n    // selectedPlanetsArray[index] ===undefined ? \"\" : calculateTime(index,);\n    selectedPlanetsArray[index] = selectedPlanet;\n    setSelectedPlanetsArray([...selectedPlanetsArray]);\n    console.log('parent Componet ::', value, selectedPlanetsArray);\n    // return vehilceList;\n  };\n\n  const vehicleOnChangeinSelectPlanet = (e: RadioChangeEvent) => {\n    const optionSelected = e.target.value;\n    const allSelectedPlanets = allVehicles.filter(\n      (vehicle) => vehicle.name === optionSelected,\n    );\n    const currentIndex = Number(e.target.name);\n    vehicleArray[currentIndex] = allSelectedPlanets[0];\n    setVehicleArray([...vehicleArray]);\n    console.log('selected Vehicles ::', vehicleArray);\n    const prevOption = selectedVehicle[currentIndex];\n    selectedVehicle[currentIndex] = optionSelected;\n    setVehicle([...selectedVehicle]);\n    calculateTime(currentIndex, prevOption, optionSelected);\n    if (prevOption != optionSelected && prevOption != undefined) {\n      const indexOfVehicle = allVehicles.map((e) => e.name).indexOf(prevOption);\n      allVehicles[indexOfVehicle].total_no = allVehicles[indexOfVehicle].total_no + 1;\n      const indexOfVehicle2 = allVehicles\n        .map((e) => e.name)\n        .indexOf(optionSelected);\n      allVehicles[indexOfVehicle2].total_no = allVehicles[indexOfVehicle2].total_no - 1;\n    } else {\n      const indexOfVehicle = allVehicles\n        .map((e) => e.name)\n        .indexOf(optionSelected);\n      allVehicles[indexOfVehicle].total_no = allVehicles[indexOfVehicle].total_no - 1;\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"falcone-main-layout\">\n        <Layout className=\"layout \">\n          <Header>\n            <div className=\"logo\">\n              <img className=\"falcone-logo\" src={logo} alt=\"falcone-logo\" />\n              <h2 className=\"finding-falcone\">FINDING FALCONE</h2>\n              <p className=\"finding-falcone-restart float-right\">\n                <Link className=\"finding-falcone-restart-link\" to=\"/\">\n                  RESTART\n                </Link>\n              </p>\n            </div>\n          </Header>\n          <Content style={{ padding: '0 50px' }}>\n            <div className=\"site-layout-content falcone-row-primary\">\n              <h5 className=\"falcone-text text-center\">\n                Select 4 planets and the space vehicles to search in these\n                planets\n              </h5>\n              <p className=\"float-left\">\n                TIME TAKEN:\n                {time}\n              </p>\n              <br />\n              <br />\n              <div className=\"row\">\n                <div className=\"col\">\n                  <SelectPlanet\n                    index={0}\n                    onSelectPlanetChange={onSelectChange}\n                    planets={selectedPlanetsArray}\n                    planetsArray={planetArray}\n                    handleRadioChange={vehicleOnChangeinSelectPlanet}\n                  />\n                </div>\n                <div className=\"col falcone-col\">\n                  <SelectPlanet\n                    index={1}\n                    onSelectPlanetChange={onSelectChange}\n                    planets={selectedPlanetsArray}\n                    planetsArray={planetArray}\n                    handleRadioChange={vehicleOnChangeinSelectPlanet}\n                  />\n                </div>\n                <div className=\"col\">\n                  <SelectPlanet\n                    index={2}\n                    onSelectPlanetChange={onSelectChange}\n                    planets={selectedPlanetsArray}\n                    planetsArray={planetArray}\n                    handleRadioChange={vehicleOnChangeinSelectPlanet}\n                  />\n                </div>\n                <div className=\"col\">\n                  <SelectPlanet\n                    index={3}\n                    onSelectPlanetChange={onSelectChange}\n                    planets={selectedPlanetsArray}\n                    planetsArray={planetArray}\n                    handleRadioChange={vehicleOnChangeinSelectPlanet}\n                  />\n                </div>\n              </div>\n              {selectedVehicle.filter((value) => value !== undefined).length\n              !== 4 ? (\n                  ''\n                ) : (\n                  <>\n                    <div className=\"d-flex justify-content-center\">\n                      <Button type=\"primary\" onClick={findFalcone}>\n                        <Link to=\"/result\"> FIND FALCONE</Link>\n                      </Button>\n                    </div>\n                  </>\n                )}\n            </div>\n          </Content>\n          <Footer style={{ textAlign: 'center' }}>Created for GeekTrust</Footer>\n        </Layout>\n      </div>\n    </div>\n  );\n};\nexport default Selection;\n"]},"metadata":{},"sourceType":"module"}