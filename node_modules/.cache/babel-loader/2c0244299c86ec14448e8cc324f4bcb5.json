{"ast":null,"code":"var _jsxFileName = \"/home/goutham/typescript-sample/src/components/Selection.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as actions from '../actions';\nimport { thunkSendMessage, planetsApi, VehiclesApi, GetTokenFromApi } from '../actions/thunkActions';\nimport logo from \"../logo.svg\";\nimport './App.css';\n\nconst Selection = () => {\n  const message = useSelector(state => state.message);\n  const id = useSelector(state => state.id);\n  const planet = useSelector(state => state.planet);\n  const vehicle = useSelector(state => state.vehicle);\n  const dispatch = useDispatch();\n  const [planets, setPlanets] = useState([]);\n  useEffect(() => {\n    dispatch(GetTokenFromApi());\n    dispatch(planetsApi());\n    dispatch(VehiclesApi());\n  }, []);\n\n  const onClick = () => {\n    dispatch(actions.sampleAction2(id + 1));\n    dispatch(thunkSendMessage('hello'));\n  }; // const showPlanets = () => {\n  //   // const selectedPlanet = event.currentTarget.value;\n  //   // setPlanets([...planets, selectedPlanet]);\n  //   // const planetList = planet.filter((data) => !planets.includes(data.name));\n  //   const list = planet.map((data) => (\n  //     <>\n  //       <option id={data.name} value={data.name}>{data.name}</option>\n  //     </>\n  //   ));\n  //   return list;\n  // };\n\n\n  const onSelectPlanet = event => {\n    const selectedPlanet = event.currentTarget.value;\n    const index = Number(event.currentTarget.id);\n    console.log(index);\n    planets[index] = selectedPlanet;\n    setPlanets(planets);\n    console.log(planets);\n    const planetList = planet.filter(data => !planets.includes(data.name));\n    console.log(planetList);\n    const list = planetList.map(data => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n      id: data.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, data.name)));\n    return list;\n  }; // const showPlanets2 = () => {\n  //   const planetList = planet.filter((data) => !planets.includes(data.name));\n  //   console.log(planetList);\n  //   const list = planetList.map((data) => (\n  //     <>\n  //       <option id={data.name}>{data.name}</option>\n  //     </>\n  //   ));\n  //   return list;\n  // };\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"message:\", ' ', message, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }), \"id:\", ' ', id, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"increment id\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    id: \"0\",\n    onClick: onSelectPlanet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, planets[0]))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    id: \"1\",\n    onClick: onSelectPlanet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, planets[1]))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    id: \"2\",\n    onClick: onSelectPlanet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, planets[2]))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    id: \"3\",\n    onClick: onSelectPlanet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, planets[3])))))));\n};\n\nexport default Selection;","map":{"version":3,"sources":["/home/goutham/typescript-sample/src/components/Selection.tsx"],"names":["React","useEffect","useState","useSelector","useDispatch","actions","thunkSendMessage","planetsApi","VehiclesApi","GetTokenFromApi","Selection","message","state","id","planet","vehicle","dispatch","planets","setPlanets","onClick","sampleAction2","onSelectPlanet","event","selectedPlanet","currentTarget","value","index","Number","console","log","planetList","filter","data","includes","name","list","map","logo"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport * as actions from '../actions';\nimport {\n  thunkSendMessage,\n  planetsApi,\n  VehiclesApi,\n  GetTokenFromApi,\n} from '../actions/thunkActions';\nimport logo from '../logo.svg';\nimport './App.css';\nimport { State } from '../reducers';\n\nconst Selection = () => {\n  const message = useSelector((state: State) => state.message);\n  const id = useSelector((state: State) => state.id);\n  const planet = useSelector((state: State) => state.planet);\n  const vehicle = useSelector((state: State) => state.vehicle);\n  const dispatch = useDispatch();\n\n  const [planets, setPlanets] = useState <Array<string>>([]);\n\n  useEffect(() => {\n    dispatch(GetTokenFromApi());\n    dispatch(planetsApi());\n    dispatch(VehiclesApi());\n  }, []);\n\n  const onClick = () => {\n    dispatch(actions.sampleAction2(id + 1));\n    dispatch(thunkSendMessage('hello'));\n  };\n\n  // const showPlanets = () => {\n  //   // const selectedPlanet = event.currentTarget.value;\n  //   // setPlanets([...planets, selectedPlanet]);\n  //   // const planetList = planet.filter((data) => !planets.includes(data.name));\n  //   const list = planet.map((data) => (\n  //     <>\n  //       <option id={data.name} value={data.name}>{data.name}</option>\n  //     </>\n\n  //   ));\n  //   return list;\n  // };\n  const onSelectPlanet = (event: React.MouseEvent<HTMLSelectElement, MouseEvent>) => {\n    const selectedPlanet = event.currentTarget.value;\n    const index =Number(event.currentTarget.id) ;\n    console.log(index);\n    planets[index]=selectedPlanet;\n    setPlanets(planets);\n    console.log(planets);\n    const planetList = planet.filter((data) => !planets.includes(data.name));\n    console.log(planetList);\n    const list = planetList.map((data) => (\n      <>\n        <option id={data.name}>{data.name}</option>\n      </>\n\n    ));\n    return list;\n  };\n\n  // const showPlanets2 = () => {\n  //   const planetList = planet.filter((data) => !planets.includes(data.name));\n  //   console.log(planetList);\n  //   const list = planetList.map((data) => (\n  //     <>\n  //       <option id={data.name}>{data.name}</option>\n  //     </>\n\n  //   ));\n  //   return list;\n  // };\n\n\n  return (\n    <div>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          message:\n          {' '}\n          {message}\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          id:\n          {' '}\n          {id}\n          <button type=\"button\" onClick={onClick}>\n            increment id\n          </button>\n          <div className=\"row\">\n            <div className=\"col\">\n              <select id=\"0\" onClick={onSelectPlanet}>\n              <option selected>{planets[0]}</option>\n\n                {/* {showPlanets2()} */}\n              </select>\n              \n            </div>\n            <div className=\"col\">\n              <select id=\"1\" onClick={onSelectPlanet}>\n                <option selected>{planets[1]}</option>\n                {/* {showPlanets2()} */}\n              </select>\n            </div>\n            <div className=\"col\">\n            <select id=\"2\" onClick={onSelectPlanet}>\n                <option selected>{planets[2]}</option>\n                {/* {showPlanets2()} */}\n              </select>\n            </div>\n            <div className=\"col\">\n            <select id=\"3\" onClick={onSelectPlanet}>\n                <option selected>{planets[3]}</option>\n                {/* {showPlanets2()} */}\n              </select>\n            </div>\n          </div>\n        </header>\n      </div>\n    </div>\n  );\n};\nexport default Selection;\n"]},"metadata":{},"sourceType":"module"}