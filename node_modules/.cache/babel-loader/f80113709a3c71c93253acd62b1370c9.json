{"ast":null,"code":"var _jsxFileName = \"/home/goutham/typescript-sample/src/components/App.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as actions from '../actions';\nimport { thunkSendMessage, planetsApi, VehiclesApi, GetTokenFromApi } from '../actions/thunkActions';\nimport logo from \"../logo.svg\";\nimport './App.css';\n\n// import { Planet } from '../types/types';\n// import Selection from './Selection';\n// import thunkSendMessage from '../actions/thunkActions'\nconst App = () => {\n  const [option1, setOption1] = useState('');\n  const [option2, setOption2] = useState('');\n  const [option3, setOption3] = useState('');\n  const [option4, setOption4] = useState('');\n  const message = useSelector(state => state.message);\n  const id = useSelector(state => state.id);\n  const planet = useSelector(state => state.planet);\n  const vehicle = useSelector(state => state.vehicle);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(GetTokenFromApi());\n    dispatch(planetsApi());\n    dispatch(VehiclesApi());\n  }, []);\n\n  const onClick = () => {\n    dispatch(actions.sampleAction2(id + 1));\n    dispatch(thunkSendMessage('hello'));\n  };\n\n  const planetNameintooption1 = event => {\n    const data = event.currentTarget.value;\n    setOption1(data);\n  };\n\n  const planetNameintooption2 = event => {\n    const data = event.currentTarget.value;\n    setOption2(data);\n  };\n\n  const planetNameintooption3 = event => {\n    const data = event.currentTarget.value;\n    setOption3(data);\n  };\n\n  const planetNameintooption4 = event => {\n    const data = event.currentTarget.value;\n    setOption4(data);\n  };\n\n  const unionPlanets = [option1, option2, option3, option4];\n  console.log(unionPlanets);\n\n  const planetFilter = () => {\n    const filter = planet.filter(data => data.name !== option2 && data.name !== option3 && data.name !== option4);\n    const list = filter.map(data => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n      value: data.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, data.name, ' ', \"(\", data.distance, \")\")));\n    return list;\n  };\n\n  const planetFilter2 = () => {\n    const filter = planet.filter(data => data.name !== option1 && data.name !== option3 && data.name !== option4);\n    const list = filter.map(data => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n      value: data.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, data.name, ' ', \"(\", data.distance, \")\")));\n    return list;\n  };\n\n  const planetFilter3 = () => {\n    const filter = planet.filter(data => data.name !== option1 && data.name !== option2 && data.name !== option4);\n    const list = filter.map(data => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n      value: data.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, data.name, ' ', \"(\", data.distance, \")\")));\n    return list;\n  };\n\n  const planetFilter4 = () => {\n    const filter = planet.filter(data => data.name !== option1 && data.name !== option2 && data.name !== option3);\n    const list = filter.map(data => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n      value: data.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, data.name, ' ', \"(\", data.distance, \")\")));\n    return list;\n  };\n\n  const vehicleFilter = planetName => {\n    const planetData = planet.filter(data => data.name === planetName);\n    const distanceData = Number(planetData.map(data => data.distance));\n    console.log(distanceData); // planetData.map((data) => console.log(data.distance));\n\n    const list = vehicle.filter(data => data.max_distance >= distanceData);\n\n    const inputData = event => {\n      console.log(event.target.value);\n    };\n\n    const vehicleList = list.map(data => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      value: data.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }), data.name, \"(\", data.total_no, \")\")));\n    return vehicleList;\n  };\n\n  const vehicleFilter2 = planetName => {\n    const planetData = planet.filter(data => data.name === planetName);\n    const distanceData = Number(planetData.map(data => data.distance));\n    console.log(distanceData); // planetData.map((data) => console.log(data.distance));\n\n    const list = vehicle.filter(data => data.max_distance >= distanceData);\n\n    const inputData = event => {\n      console.log(event.target.value);\n    };\n\n    const vehicleList = list.map(data => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-check-input\",\n      type: \"radio\",\n      onChange: inputData,\n      id: \"exampleRadios1\",\n      value: data.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }\n    }), data.name, \"(\", data.total_no, \")\")));\n    return vehicleList;\n  };\n\n  const vehicleFilter3 = planetName => {\n    const planetData = planet.filter(data => data.name === planetName);\n    const distanceData = Number(planetData.map(data => data.distance));\n    console.log(distanceData); // planetData.map((data) => console.log(data.distance));\n\n    const list = vehicle.filter(data => data.max_distance >= distanceData);\n\n    const inputData = event => {\n      console.log(event.target.value);\n    };\n\n    const vehicleList = list.map(data => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-check-input\",\n      type: \"radio\",\n      onChange: inputData,\n      id: \"exampleRadios1\",\n      value: data.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-check-label\",\n      htmlFor: \"exampleRadios1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }\n    }, data.name, \"(\", data.total_no, \")\"))));\n    return vehicleList;\n  };\n\n  const vehicleFilter4 = planetName => {\n    const planetData = planet.filter(data => data.name === planetName);\n    const distanceData = Number(planetData.map(data => data.distance));\n    console.log(distanceData); // planetData.map((data) => console.log(data.distance));\n\n    const list = vehicle.filter(data => data.max_distance >= distanceData);\n\n    const inputData = event => {\n      console.log(event.target.value);\n    };\n\n    const vehicleList = list.map(data => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-check-input\",\n      type: \"radio\",\n      onChange: inputData,\n      id: \"exampleRadios1\",\n      value: data.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-check-label\",\n      htmlFor: \"exampleRadios1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }\n    }, data.name, \"(\", data.total_no, \")\"))));\n    return vehicleList;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }\n  }, \"message:\", ' ', message, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }), \"id:\", ' ', id, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }\n  }, \"increment id\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  }, option1, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    onChange: planetNameintooption1,\n    className: \"form-control\",\n    id: \"exampleFormControlSelect1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 17\n    }\n  }, \" \"), planetFilter()), vehicleFilter(option1))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 11\n    }\n  }, option2, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    onChange: planetNameintooption2,\n    className: \"form-control\",\n    id: \"exampleFormControlSelect1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 17\n    }\n  }, \" \"), planetFilter2()), vehicleFilter2(option2))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 11\n    }\n  }, option3, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    onChange: planetNameintooption3,\n    className: \"form-control\",\n    id: \"exampleFormControlSelect1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }\n  }, \" \"), planetFilter3()), vehicleFilter3(option3))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 11\n    }\n  }, option4, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    onChange: planetNameintooption4,\n    className: \"form-control\",\n    id: \"exampleFormControlSelect1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 17\n    }\n  }, \" \"), planetFilter4()), vehicleFilter4(option4)))), vehicle.map(planets => /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 11\n    }\n  }, planets.name, ' ', planets.max_distance, ' ', planets.speed, ' '))));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/goutham/typescript-sample/src/components/App.tsx"],"names":["React","useEffect","useState","useSelector","useDispatch","actions","thunkSendMessage","planetsApi","VehiclesApi","GetTokenFromApi","App","option1","setOption1","option2","setOption2","option3","setOption3","option4","setOption4","message","state","id","planet","vehicle","dispatch","onClick","sampleAction2","planetNameintooption1","event","data","currentTarget","value","planetNameintooption2","planetNameintooption3","planetNameintooption4","unionPlanets","console","log","planetFilter","filter","name","list","map","distance","planetFilter2","planetFilter3","planetFilter4","vehicleFilter","planetName","planetData","distanceData","Number","max_distance","inputData","target","vehicleList","total_no","vehicleFilter2","vehicleFilter3","vehicleFilter4","logo","planets","speed"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport * as actions from '../actions';\nimport {\n  thunkSendMessage,\n  planetsApi,\n  VehiclesApi,\n  GetTokenFromApi,\n} from '../actions/thunkActions';\nimport logo from '../logo.svg';\nimport './App.css';\nimport { State } from '../reducers';\n// import { Planet } from '../types/types';\n// import Selection from './Selection';\n// import thunkSendMessage from '../actions/thunkActions'\n\nconst App = () => {\n  const [option1, setOption1] = useState<string>('');\n  const [option2, setOption2] = useState<string>('');\n  const [option3, setOption3] = useState<string>('');\n  const [option4, setOption4] = useState<string>('');\n\n\n  const message = useSelector((state: State) => state.message);\n  const id = useSelector((state: State) => state.id);\n  const planet = useSelector((state: State) => state.planet);\n  const vehicle = useSelector((state: State) => state.vehicle);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(GetTokenFromApi());\n    dispatch(planetsApi());\n    dispatch(VehiclesApi());\n  }, []);\n\n  const onClick = () => {\n    dispatch(actions.sampleAction2(id + 1));\n    dispatch(thunkSendMessage('hello'));\n  };\n\n\n  const planetNameintooption1 = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const data = event.currentTarget.value;\n    setOption1(data);\n  };\n  const planetNameintooption2 = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const data = event.currentTarget.value;\n    setOption2(data);\n  };\n  const planetNameintooption3 = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const data = event.currentTarget.value;\n    setOption3(data);\n  };\n  const planetNameintooption4 = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const data = event.currentTarget.value;\n    setOption4(data);\n  };\n  const unionPlanets:Array<string> = [option1, option2, option3, option4];\n  console.log(unionPlanets);\n\n  const planetFilter = () => {\n    const filter = planet.filter((data) => data.name !== option2 && data.name !== option3 && data.name !== option4);\n    const list = filter.map((data) => (\n      <>\n        <option value={data.name}>\n          {data.name}\n          {' '}\n          (\n          {data.distance}\n          )\n        </option>\n\n      </>\n    ));\n    return list;\n  };\n  const planetFilter2 = () => {\n    const filter = planet.filter((data) => data.name !== option1 && data.name !== option3 && data.name !== option4);\n    const list = filter.map((data) => (\n      <>\n        <option value={data.name}>\n          {data.name}\n          {' '}\n          (\n          {data.distance}\n          )\n\n        </option>\n\n      </>\n    ));\n    return list;\n  };\n  const planetFilter3 = () => {\n    const filter = planet.filter((data) => data.name !== option1 && data.name !== option2 && data.name !== option4);\n    const list = filter.map((data) => (\n      <>\n        <option value={data.name}>\n          {data.name}\n          {' '}\n          (\n          {data.distance}\n          )\n\n        </option>\n\n      </>\n    ));\n    return list;\n  };\n  const planetFilter4 = () => {\n    const filter = planet.filter((data) => data.name !== option1 && data.name !== option2 && data.name !== option3);\n    const list = filter.map((data) => (\n      <>\n        <option value={data.name}>\n          {data.name}\n          {' '}\n          (\n          {data.distance}\n          )\n        </option>\n\n      </>\n    ));\n    return list;\n  };\n\n  const vehicleFilter = (planetName:string) => {\n    const planetData = planet.filter((data) => data.name === planetName);\n    const distanceData:number = Number((planetData.map((data) => data.distance)));\n    console.log(distanceData);\n    // planetData.map((data) => console.log(data.distance));\n    const list = vehicle.filter((data) => data.max_distance >= distanceData);\n\n    const inputData = (event:React.ChangeEvent<HTMLInputElement>) => {\n      console.log(event.target.value);\n    };\n    const vehicleList = list.map((data) => (\n      <>\n        <div className=\"form-check\">\n          <input type=\"radio\" value={data.name} />\n          {/* <label className=\"form-check-label\" htmlFor=\"exampleRadios1\"> */}\n          {data.name}\n          (\n          {data.total_no }\n          )\n          {/* </label> */}\n          {/* <h1>{data.name}</h1> */}\n\n        </div>\n      </>\n    ));\n    return vehicleList;\n  };\n\n\n  const vehicleFilter2 = (planetName:string) => {\n    const planetData = planet.filter((data) => data.name === planetName);\n    const distanceData:number = Number((planetData.map((data) => data.distance)));\n    console.log(distanceData);\n    // planetData.map((data) => console.log(data.distance));\n    const list = vehicle.filter((data) => data.max_distance >= distanceData);\n\n    const inputData = (event:React.ChangeEvent<HTMLInputElement>) => {\n      console.log(event.target.value);\n    };\n    const vehicleList = list.map((data) => (\n      <>\n        <div className=\"form-check\">\n          <input className=\"form-check-input\" type=\"radio\" onChange={inputData} id=\"exampleRadios1\" value={data.name} />\n          {/* <label className=\"form-check-label\" htmlFor=\"exampleRadios1\"> */}\n          {data.name}\n          (\n          {data.total_no }\n          )\n          {/* </label> */}\n          {/* <h1>{data.name}</h1> */}\n\n        </div>\n      </>\n    ));\n    return vehicleList;\n  };\n  const vehicleFilter3 = (planetName:string) => {\n    const planetData = planet.filter((data) => data.name === planetName);\n    const distanceData:number = Number((planetData.map((data) => data.distance)));\n    console.log(distanceData);\n    // planetData.map((data) => console.log(data.distance));\n    const list = vehicle.filter((data) => data.max_distance >= distanceData);\n\n    const inputData = (event:React.ChangeEvent<HTMLInputElement>) => {\n      console.log(event.target.value);\n    };\n    const vehicleList = list.map((data) => (\n      <>\n        <div className=\"form-check\">\n          <input className=\"form-check-input\" type=\"radio\" onChange={inputData} id=\"exampleRadios1\" value={data.name} />\n          <label className=\"form-check-label\" htmlFor=\"exampleRadios1\">\n            {data.name}\n            (\n            {data.total_no }\n            )\n          </label>\n          {/* <h1>{data.name}</h1> */}\n\n        </div>\n      </>\n    ));\n    return vehicleList;\n  };\n  const vehicleFilter4 = (planetName:string) => {\n    const planetData = planet.filter((data) => data.name === planetName);\n    const distanceData:number = Number((planetData.map((data) => data.distance)));\n    console.log(distanceData);\n    // planetData.map((data) => console.log(data.distance));\n    const list = vehicle.filter((data) => data.max_distance >= distanceData);\n\n    const inputData = (event:React.ChangeEvent<HTMLInputElement>) => {\n      console.log(event.target.value);\n    };\n    const vehicleList = list.map((data) => (\n      <>\n        <div className=\"form-check\">\n          <input className=\"form-check-input\" type=\"radio\" onChange={inputData} id=\"exampleRadios1\" value={data.name} />\n          <label className=\"form-check-label\" htmlFor=\"exampleRadios1\">\n            {data.name}\n            (\n            {data.total_no }\n            )\n          </label>\n          {/* <h1>{data.name}</h1> */}\n\n        </div>\n      </>\n    ));\n    return vehicleList;\n  };\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        message:\n        {' '}\n        {message}\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        id:\n        {' '}\n        {id}\n        <button type=\"button\" onClick={onClick}>\n          increment id\n        </button>\n        <div className=\"row\">\n          <div className=\"col-sm\">\n            {option1}\n            <div className=\"form-group\">\n              <select onChange={planetNameintooption1} className=\"form-control\" id=\"exampleFormControlSelect1\">\n                <option> </option>\n                {/* {planet.map((planets) => (\n                  <option value={planets.name}>\n                    {planets.name}\n                    {' '}\n                  </option>\n                ))} */}\n                {planetFilter()}\n\n\n              </select>\n              {vehicleFilter(option1)}\n            </div>\n          </div>\n          <div className=\"col-sm\">\n            {option2}\n            <div className=\"form-group\">\n              <select onChange={planetNameintooption2} className=\"form-control\" id=\"exampleFormControlSelect1\">\n                <option> </option>\n                {/* {planet.map((planets) => (\n                  <option value={planets.name}>\n                    {planets.name}\n                    {' '}\n                  </option>\n                ))} */}\n                {planetFilter2()}\n              </select>\n              {vehicleFilter2(option2)}\n            </div>\n          </div>\n          <div className=\"col-sm\">\n            {option3}\n            <div className=\"form-group\">\n              <select onChange={planetNameintooption3} className=\"form-control\" id=\"exampleFormControlSelect1\">\n                <option> </option>\n                {/* {planet.map((planets) => (\n                  <option value={planets.name}>\n                    {planets.name}\n                    {' '}\n                  </option>\n                ))} */}\n                {planetFilter3()}\n              </select>\n              {vehicleFilter3(option3)}\n            </div>\n          </div>\n          <div className=\"col-sm\">\n            {option4}\n            <div className=\"form-group\">\n              <select onChange={planetNameintooption4} className=\"form-control\" id=\"exampleFormControlSelect1\">\n                <option> </option>\n                {/* {planet.map((planets) => (\n                  <option value={planets.name}>\n                    {planets.name}\n                    {' '}\n                  </option>\n                ))} */}\n                {planetFilter4()}\n              </select>\n              {vehicleFilter4(option4)}\n            </div>\n          </div>\n        </div>\n\n\n        {/* {planet.map((planets) => (\n          <h1>\n            {planets.name}\n            {' '}\n            {planets.distance}\n          </h1>\n        ))} */}\n        {vehicle.map((planets) => (\n          <h1>\n            {planets.name}\n            {' '}\n            {planets.max_distance}\n            {' '}\n            {planets.speed}\n            {' '}\n          </h1>\n        ))}\n\n      </header>\n      {/* <Selection /> */}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}