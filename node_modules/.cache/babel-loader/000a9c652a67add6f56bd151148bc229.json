{"ast":null,"code":"var _jsxFileName = \"/home/goutham/typescript-sample/FindTheFalcon/src/components/Selection.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Select, Layout, Button } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { planetsApi, VehiclesApi, GetTokenFromApi, GetResultFromApi } from '../actions/thunkActions';\nimport logo from './Logo.png';\nimport './App.css';\nimport SelectPlanet from './SelectPlanet';\nimport * as actions from '../actions';\nconst {\n  Header,\n  Content,\n  Footer\n} = Layout;\nconst {\n  Option\n} = Select;\nconst radioStyle = {\n  display: 'block',\n  height: '30px',\n  lineHeight: '30px'\n};\n\nconst Selection = () => {\n  // const message = useSelector((state: State) => state.message);\n  // const id = useSelector((state: State) => state.id);\n  const allPlanets = useSelector(state => state.planet);\n  const allVehicles = useSelector(state => state.vehicle);\n  const tokens = useSelector(state => state.token);\n  const dispatch = useDispatch();\n  const [planetArray, setArray] = useState([]);\n  const [selectedVehicle, setVehicle] = useState([]);\n  const [vehicleArray, setVehicleArray] = useState([]);\n  const [time, setTime] = useState(0);\n  const [selectedPlanetsArray, setSelectedPlanetsArray] = useState([]);\n  useEffect(() => {\n    dispatch(GetTokenFromApi());\n    dispatch(planetsApi());\n    dispatch(VehiclesApi());\n  }, []);\n\n  const vehicleOnChange = e => {\n    const optionSelected = e.target.value;\n    const allSelectedPlanets = allVehicles.filter(vehicle => vehicle.name === optionSelected);\n    const currentIndex = Number(e.target.name);\n    vehicleArray[currentIndex] = allSelectedPlanets[0];\n    setVehicleArray([...vehicleArray]);\n    console.log('selected Vehicles ::', vehicleArray);\n    const prevOption = selectedVehicle[currentIndex];\n    selectedVehicle[currentIndex] = optionSelected;\n    setVehicle([...selectedVehicle]);\n    calculateTime(currentIndex, prevOption, optionSelected);\n\n    if (prevOption != optionSelected && prevOption != undefined) {\n      const indexOfVehicle = allVehicles.map(e => e.name).indexOf(prevOption);\n      allVehicles[indexOfVehicle].total_no = allVehicles[indexOfVehicle].total_no + 1;\n      const indexOfVehicle2 = allVehicles.map(e => e.name).indexOf(optionSelected);\n      allVehicles[indexOfVehicle2].total_no = allVehicles[indexOfVehicle2].total_no - 1;\n    } else {\n      const indexOfVehicle = allVehicles.map(e => e.name).indexOf(optionSelected);\n      allVehicles[indexOfVehicle].total_no = allVehicles[indexOfVehicle].total_no - 1;\n    }\n  };\n\n  const calculateTime = (index, previousOption, optionSelected) => {\n    if (optionSelected !== previousOption && previousOption !== undefined) {\n      const prevTimeIndex = allVehicles.map(e => e.name).indexOf(previousOption);\n      const prevTime = planetArray[index].distance / allVehicles[prevTimeIndex].speed;\n      const indexTime = time + planetArray[index].distance / vehicleArray[index].speed - prevTime;\n      setTime(indexTime);\n    } else {\n      const indextime = time + planetArray[index].distance / vehicleArray[index].speed;\n      setTime(indextime);\n    }\n  };\n\n  const findFalcone = () => {\n    const tokenValue = String(Object.values(tokens));\n    const selectedData = {\n      token: tokenValue,\n      planet_names: selectedPlanetsArray,\n      vehicle_names: selectedVehicle\n    };\n    dispatch(GetResultFromApi(selectedData));\n    dispatch(actions.getTime(time));\n    console.log('TIME TAKEN ::', time);\n  };\n\n  const onSelectChange = (value, currentIndex) => {\n    const selectedPlanet = value;\n    const planetDistance = allPlanets.filter(planet => planet.name === selectedPlanet);\n    const index = currentIndex;\n    planetArray[index] = planetDistance[0];\n    setArray([...planetArray]);\n    selectedPlanetsArray[index] = selectedPlanet;\n    setSelectedPlanetsArray([...selectedPlanetsArray]);\n    console.log('parent Componet ::', value, selectedPlanetsArray);\n  };\n\n  const vehicleOnChangeinSelectPlanet = e => {\n    const optionSelected = e.target.value;\n    const allSelectedPlanets = allVehicles.filter(vehicle => vehicle.name === optionSelected);\n    const currentIndex = Number(e.target.name);\n    vehicleArray[currentIndex] = allSelectedPlanets[0];\n    setVehicleArray([...vehicleArray]);\n    console.log('selected Vehicles ::', vehicleArray);\n    const prevOption = selectedVehicle[currentIndex];\n    selectedVehicle[currentIndex] = optionSelected;\n    setVehicle([...selectedVehicle]);\n    calculateTime(currentIndex, prevOption, optionSelected);\n\n    if (prevOption != optionSelected && prevOption != undefined) {\n      const indexOfVehicle = allVehicles.map(e => e.name).indexOf(prevOption);\n      allVehicles[indexOfVehicle].total_no = allVehicles[indexOfVehicle].total_no + 1;\n      const indexOfVehicle2 = allVehicles.map(e => e.name).indexOf(optionSelected);\n      allVehicles[indexOfVehicle2].total_no = allVehicles[indexOfVehicle2].total_no - 1;\n    } else {\n      const indexOfVehicle = allVehicles.map(e => e.name).indexOf(optionSelected);\n      allVehicles[indexOfVehicle].total_no = allVehicles[indexOfVehicle].total_no - 1;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"falcone-main-layout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Layout, {\n    className: \"layout \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"falcone-logo\",\n    src: logo,\n    alt: \"falcone-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"finding-falcone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }, \"FINDING FALCONE\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"finding-falcone-restart float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"finding-falcone-restart-link\",\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, \"RESTART\")))), /*#__PURE__*/React.createElement(Content, {\n    style: {\n      padding: '0 50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"site-layout-content falcone-row-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"falcone-text text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  }, \"Select 4 planets and the space vehicles to search in these planets\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"float-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }, \"TIME TAKEN:\", time), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectPlanet, {\n    index: 0,\n    onSelectPlanetChange: onSelectChange,\n    planets: selectedPlanetsArray,\n    planetsArray: planetArray,\n    handleRadioChange: vehicleOnChangeinSelectPlanet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col falcone-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectPlanet, {\n    index: 1,\n    onSelectPlanetChange: onSelectChange,\n    planets: selectedPlanetsArray,\n    planetsArray: planetArray,\n    handleRadioChange: vehicleOnChangeinSelectPlanet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectPlanet, {\n    index: 2,\n    onSelectPlanetChange: onSelectChange,\n    planets: selectedPlanetsArray,\n    planetsArray: planetArray,\n    handleRadioChange: vehicleOnChangeinSelectPlanet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectPlanet, {\n    index: 3,\n    onSelectPlanetChange: onSelectChange,\n    planets: selectedPlanetsArray,\n    planetsArray: planetArray,\n    handleRadioChange: vehicleOnChangeinSelectPlanet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 19\n    }\n  }))), selectedVehicle.filter(value => value !== undefined).length !== 4 ? '' : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: findFalcone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/FindFalcon/result\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 25\n    }\n  }, \" FIND FALCONE\")))))), /*#__PURE__*/React.createElement(Footer, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }, \"Created for GeekTrust\"))));\n};\n\nexport default Selection;","map":{"version":3,"sources":["/home/goutham/typescript-sample/FindTheFalcon/src/components/Selection.tsx"],"names":["React","useEffect","useState","useSelector","useDispatch","Select","Layout","Button","Link","planetsApi","VehiclesApi","GetTokenFromApi","GetResultFromApi","logo","SelectPlanet","actions","Header","Content","Footer","Option","radioStyle","display","height","lineHeight","Selection","allPlanets","state","planet","allVehicles","vehicle","tokens","token","dispatch","planetArray","setArray","selectedVehicle","setVehicle","vehicleArray","setVehicleArray","time","setTime","selectedPlanetsArray","setSelectedPlanetsArray","vehicleOnChange","e","optionSelected","target","value","allSelectedPlanets","filter","name","currentIndex","Number","console","log","prevOption","calculateTime","undefined","indexOfVehicle","map","indexOf","total_no","indexOfVehicle2","index","previousOption","prevTimeIndex","prevTime","distance","speed","indexTime","indextime","findFalcone","tokenValue","String","Object","values","selectedData","planet_names","vehicle_names","getTime","onSelectChange","selectedPlanet","planetDistance","vehicleOnChangeinSelectPlanet","padding","length","textAlign"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, ChangeEvent } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Select, Radio, Layout, Button, Skeleton,\n} from 'antd';\nimport { RadioChangeEvent } from 'antd/lib/radio/interface';\nimport { Link } from 'react-router-dom';\nimport {\n  planetsApi,\n  VehiclesApi,\n  GetTokenFromApi,\n  GetResultFromApi,\n} from '../actions/thunkActions';\n\nimport logo from './Logo.png';\nimport './App.css';\nimport { State } from '../reducers';\nimport { Planet, Vehicle, FalconeData } from '../types/types';\nimport SelectPlanet from './SelectPlanet';\nimport * as actions from '../actions';\n\nconst { Header, Content, Footer } = Layout;\nconst { Option } = Select;\n\nconst radioStyle = {\n  display: 'block',\n  height: '30px',\n  lineHeight: '30px',\n};\nconst Selection = () => {\n  // const message = useSelector((state: State) => state.message);\n  // const id = useSelector((state: State) => state.id);\n  const allPlanets = useSelector((state: State) => state.planet);\n  const allVehicles = useSelector((state: State) => state.vehicle);\n  const tokens = useSelector((state: State) => state.token);\n  const dispatch = useDispatch();\n\n  const [planetArray, setArray] = useState<Planet[]>([]);\n  const [selectedVehicle, setVehicle] = useState<Array<string>>([]);\n  const [vehicleArray, setVehicleArray] = useState<Vehicle[]>([]);\n  const [time, setTime] = useState<number>(0);\n  const [selectedPlanetsArray, setSelectedPlanetsArray] = useState<string[]>(\n    [],\n  );\n\n  useEffect(() => {\n    dispatch(GetTokenFromApi());\n    dispatch(planetsApi());\n    dispatch(VehiclesApi());\n  }, []);\n\n  const vehicleOnChange = (e: RadioChangeEvent) => {\n    const optionSelected = e.target.value;\n    const allSelectedPlanets = allVehicles.filter(\n      (vehicle) => vehicle.name === optionSelected,\n    );\n    const currentIndex = Number(e.target.name);\n    vehicleArray[currentIndex] = allSelectedPlanets[0];\n    setVehicleArray([...vehicleArray]);\n    console.log('selected Vehicles ::', vehicleArray);\n    const prevOption = selectedVehicle[currentIndex];\n    selectedVehicle[currentIndex] = optionSelected;\n    setVehicle([...selectedVehicle]);\n    calculateTime(currentIndex, prevOption, optionSelected);\n    if (prevOption != optionSelected && prevOption != undefined) {\n      const indexOfVehicle = allVehicles.map((e) => e.name).indexOf(prevOption);\n      allVehicles[indexOfVehicle].total_no = allVehicles[indexOfVehicle].total_no + 1;\n      const indexOfVehicle2 = allVehicles\n        .map((e) => e.name)\n        .indexOf(optionSelected);\n      allVehicles[indexOfVehicle2].total_no = allVehicles[indexOfVehicle2].total_no - 1;\n    } else {\n      const indexOfVehicle = allVehicles\n        .map((e) => e.name)\n        .indexOf(optionSelected);\n      allVehicles[indexOfVehicle].total_no = allVehicles[indexOfVehicle].total_no - 1;\n    }\n  };\n  const calculateTime = (\n    index: number,\n    previousOption: string,\n    optionSelected: string,\n  ) => {\n    if (optionSelected !== previousOption && previousOption !== undefined) {\n      const prevTimeIndex = allVehicles\n        .map((e) => e.name)\n        .indexOf(previousOption);\n      const prevTime = planetArray[index].distance / allVehicles[prevTimeIndex].speed;\n      const indexTime = time\n        + planetArray[index].distance / vehicleArray[index].speed\n        - prevTime;\n      setTime(indexTime);\n    } else {\n      const indextime = time + planetArray[index].distance / vehicleArray[index].speed;\n      setTime(indextime);\n    }\n  };\n\n  const findFalcone = () => {\n    const tokenValue = String(Object.values(tokens));\n    const selectedData = {\n      token: tokenValue,\n      planet_names: selectedPlanetsArray,\n      vehicle_names: selectedVehicle,\n    };\n\n    dispatch(GetResultFromApi(selectedData));\n    dispatch(actions.getTime(time));\n    console.log('TIME TAKEN ::', time);\n  };\n  const onSelectChange = (value: string, currentIndex: number) => {\n    const selectedPlanet = value;\n    const planetDistance = allPlanets.filter(\n      (planet) => planet.name === selectedPlanet,\n    );\n    const index = currentIndex;\n    planetArray[index] = planetDistance[0];\n    setArray([...planetArray]);\n    selectedPlanetsArray[index] = selectedPlanet;\n    setSelectedPlanetsArray([...selectedPlanetsArray]);\n    console.log('parent Componet ::', value, selectedPlanetsArray);\n  };\n\n  const vehicleOnChangeinSelectPlanet = (e: RadioChangeEvent) => {\n    const optionSelected = e.target.value;\n    const allSelectedPlanets = allVehicles.filter(\n      (vehicle) => vehicle.name === optionSelected,\n    );\n    const currentIndex = Number(e.target.name);\n    vehicleArray[currentIndex] = allSelectedPlanets[0];\n    setVehicleArray([...vehicleArray]);\n    console.log('selected Vehicles ::', vehicleArray);\n    const prevOption = selectedVehicle[currentIndex];\n    selectedVehicle[currentIndex] = optionSelected;\n    setVehicle([...selectedVehicle]);\n    calculateTime(currentIndex, prevOption, optionSelected);\n    if (prevOption != optionSelected && prevOption != undefined) {\n      const indexOfVehicle = allVehicles.map((e) => e.name).indexOf(prevOption);\n      allVehicles[indexOfVehicle].total_no = allVehicles[indexOfVehicle].total_no + 1;\n      const indexOfVehicle2 = allVehicles\n        .map((e) => e.name)\n        .indexOf(optionSelected);\n      allVehicles[indexOfVehicle2].total_no = allVehicles[indexOfVehicle2].total_no - 1;\n    } else {\n      const indexOfVehicle = allVehicles\n        .map((e) => e.name)\n        .indexOf(optionSelected);\n      allVehicles[indexOfVehicle].total_no = allVehicles[indexOfVehicle].total_no - 1;\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"falcone-main-layout\">\n\n        <Layout className=\"layout \">\n          <Header>\n            <div className=\"logo\">\n              <img className=\"falcone-logo\" src={logo} alt=\"falcone-logo\" />\n              <h2 className=\"finding-falcone\">FINDING FALCONE</h2>\n              <p className=\"finding-falcone-restart float-right\">\n                <Link className=\"finding-falcone-restart-link\" to=\"/\">\n                  RESTART\n                </Link>\n              </p>\n            </div>\n          </Header>\n          <Content style={{ padding: '0 50px' }}>\n            <div className=\"site-layout-content falcone-row-primary\">\n              <h5 className=\"falcone-text text-center\">\n                Select 4 planets and the space vehicles to search in these\n                planets\n              </h5>\n              <p className=\"float-left\">\n                TIME TAKEN:\n                {time}\n              </p>\n              <br />\n              <br />\n              <div className=\"row\">\n                <div className=\"col\">\n                  <SelectPlanet\n                    index={0}\n                    onSelectPlanetChange={onSelectChange}\n                    planets={selectedPlanetsArray}\n                    planetsArray={planetArray}\n                    handleRadioChange={vehicleOnChangeinSelectPlanet}\n                  />\n                </div>\n                <div className=\"col falcone-col\">\n                  <SelectPlanet\n                    index={1}\n                    onSelectPlanetChange={onSelectChange}\n                    planets={selectedPlanetsArray}\n                    planetsArray={planetArray}\n                    handleRadioChange={vehicleOnChangeinSelectPlanet}\n                  />\n                </div>\n                <div className=\"col\">\n                  <SelectPlanet\n                    index={2}\n                    onSelectPlanetChange={onSelectChange}\n                    planets={selectedPlanetsArray}\n                    planetsArray={planetArray}\n                    handleRadioChange={vehicleOnChangeinSelectPlanet}\n                  />\n                </div>\n                <div className=\"col\">\n                  <SelectPlanet\n                    index={3}\n                    onSelectPlanetChange={onSelectChange}\n                    planets={selectedPlanetsArray}\n                    planetsArray={planetArray}\n                    handleRadioChange={vehicleOnChangeinSelectPlanet}\n                  />\n                </div>\n              </div>\n              {selectedVehicle.filter((value) => value !== undefined).length\n              !== 4 ? (\n                  ''\n                ) : (\n                  <>\n                    <div className=\"d-flex justify-content-center\">\n                      <Button type=\"primary\" onClick={findFalcone}>\n                        <Link to=\"/FindFalcon/result\"> FIND FALCONE</Link>\n                      </Button>\n                    </div>\n                  </>\n                )}\n            </div>\n          </Content>\n          <Footer style={{ textAlign: 'center' }}>Created for GeekTrust</Footer>\n        </Layout>\n      </div>\n    </div>\n  );\n};\nexport default Selection;\n"]},"metadata":{},"sourceType":"module"}