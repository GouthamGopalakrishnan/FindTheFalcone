{"ast":null,"code":"import * as actions from './index';\nexport const planetsApi = () => async dispatch => {\n  const planetFetch = await fetch('https://findfalcone.herokuapp.com/planets').then(response => response.json());\n  console.log(planetFetch);\n  dispatch(actions.fetchPlanets(planetFetch));\n};\nexport const VehiclesApi = () => async dispatch => {\n  const vehicleFetch = await fetch('https://findfalcone.herokuapp.com/vehicles').then(response => response.json());\n  dispatch(actions.fetchVehicles(vehicleFetch));\n};\nexport const GetTokenFromApi = () => async dispatch => {\n  const tokenFetch = await fetch('https://findfalcone.herokuapp.com/token', {\n    headers: {\n      Accept: 'application/json'\n    },\n    method: 'POST'\n  }).then(response => response.json());\n  console.log(tokenFetch);\n  dispatch(actions.getToken(tokenFetch));\n};\nexport const GetResultFromApi = selectedData => async dispatch => {\n  console.log('SelectedConsole:::', selectedData);\n  const fetchResult = await fetch('https://findfalcone.herokuapp.com/find', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(selectedData)\n  }).then(response => response.json());\n  console.log(fetchResult);\n  dispatch(actions.getResult(fetchResult));\n};","map":{"version":3,"sources":["/home/goutham/typescript-sample/src/actions/thunkActions.ts"],"names":["actions","planetsApi","dispatch","planetFetch","fetch","then","response","json","console","log","fetchPlanets","VehiclesApi","vehicleFetch","fetchVehicles","GetTokenFromApi","tokenFetch","headers","Accept","method","getToken","GetResultFromApi","selectedData","fetchResult","body","JSON","stringify","getResult"],"mappings":"AAGA,OAAO,KAAKA,OAAZ,MAAyB,SAAzB;AAOA,OAAO,MAAMC,UAAU,GAAG,MAC8B,MAAOC,QAAP,IAAoB;AAC1E,QAAMC,WAAoB,GAAG,MAAMC,KAAK,CAAC,2CAAD,CAAL,CAChCC,IADgC,CAC1BC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADa,CAAnC;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AACAD,EAAAA,QAAQ,CAACF,OAAO,CAACU,YAAR,CAAqBP,WAArB,CAAD,CAAR;AACD,CAPM;AASP,OAAO,MAAMQ,WAAW,GAAG,MAC4B,MAAOT,QAAP,IAAoB;AACzE,QAAMU,YAAsB,GAAG,MAAMR,KAAK,CAAC,4CAAD,CAAL,CAClCC,IADkC,CAC5BC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADe,CAArC;AAEAL,EAAAA,QAAQ,CAACF,OAAO,CAACa,aAAR,CAAsBD,YAAtB,CAAD,CAAR;AACD,CALM;AAOP,OAAO,MAAME,eAAe,GAAG,MACwB,MAAOZ,QAAP,IAAoB;AACzE,QAAMa,UAAiB,GAAG,MAAMX,KAAK,CAAC,yCAAD,EAA4C;AAAEY,IAAAA,OAAO,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAX;AAA2CC,IAAAA,MAAM,EAAE;AAAnD,GAA5C,CAAL,CAC7Bb,IAD6B,CACvBC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADU,CAAhC;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYM,UAAZ;AACAb,EAAAA,QAAQ,CAACF,OAAO,CAACmB,QAAR,CAAiBJ,UAAjB,CAAD,CAAR;AACD,CANM;AAQP,OAAO,MAAMK,gBAAgB,GAC3BC,YAD8B,IAEuB,MAAOnB,QAAP,IAAoB;AACzEM,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCY,YAAlC;AACA,QAAMC,WAAkB,GAAG,MAAMlB,KAAK,CAAC,wCAAD,EACpC;AACEc,IAAAA,MAAM,EAAE,MADV;AAEEF,IAAAA,OAAO,EAAE;AAAEC,MAAAA,MAAM,EAAE,kBAAV;AAA8B,sBAAgB;AAA9C,KAFX;AAGEM,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,YAAf;AAHR,GADoC,CAAL,CAM9BhB,IAN8B,CAMxBC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EANW,CAAjC;AAOAC,EAAAA,OAAO,CAACC,GAAR,CAAYa,WAAZ;AACApB,EAAAA,QAAQ,CAACF,OAAO,CAAC0B,SAAR,CAAkBJ,WAAlB,CAAD,CAAR;AACD,CAbM","sourcesContent":["import { Action } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\n\nimport * as actions from './index';\nimport { State } from '../reducers';\nimport {\n  Planet, Vehicle, Result,\n} from '../types/types';\n\n\nexport const planetsApi = (\n): ThunkAction<void, State, unknown, Action<string>> => async (dispatch) => {\n  const planetFetch:Planet[] = await fetch('https://findfalcone.herokuapp.com/planets')\n    .then((response) => response.json());\n\n  console.log(planetFetch);\n  dispatch(actions.fetchPlanets(planetFetch));\n};\n\nexport const VehiclesApi = (\n):ThunkAction<void, State, unknown, Action<string>> => async (dispatch) => {\n  const vehicleFetch:Vehicle[] = await fetch('https://findfalcone.herokuapp.com/vehicles')\n    .then((response) => response.json());\n  dispatch(actions.fetchVehicles(vehicleFetch));\n};\n\nexport const GetTokenFromApi = (\n):ThunkAction<void, State, unknown, Action<string>> => async (dispatch) => {\n  const tokenFetch:string = await fetch('https://findfalcone.herokuapp.com/token', { headers: { Accept: 'application/json' }, method: 'POST' })\n    .then((response) => response.json());\n  console.log(tokenFetch);\n  dispatch(actions.getToken(tokenFetch));\n};\n\nexport const GetResultFromApi = (\n  selectedData:object,\n):ThunkAction<void, State, unknown, Action<string>> => async (dispatch) => {\n  console.log('SelectedConsole:::', selectedData);\n  const fetchResult:Result = await fetch('https://findfalcone.herokuapp.com/find',\n    {\n      method: 'POST',\n      headers: { Accept: 'application/json', 'Content-Type': 'application/json' },\n      body: JSON.stringify(selectedData),\n    })\n    .then((response) => response.json());\n  console.log(fetchResult);\n  dispatch(actions.getResult(fetchResult));\n};\n"]},"metadata":{},"sourceType":"module"}