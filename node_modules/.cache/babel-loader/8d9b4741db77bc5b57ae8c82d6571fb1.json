{"ast":null,"code":"var _jsxFileName = \"/home/goutham/typescript-sample/src/components/App.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as actions from '../actions';\nimport { thunkSendMessage, planetsApi, VehiclesApi, GetTokenFromApi } from '../actions/thunkActions';\nimport logo from \"../logo.svg\";\nimport './App.css';\n\n// import thunkSendMessage from '../actions/thunkActions'\nconst App = () => {\n  const [option1, setOption1] = useState('');\n  const [option2, setOption2] = useState('');\n  const [option3, setOption3] = useState('');\n  const [option4, setOption4] = useState('');\n  const message = useSelector(state => state.message);\n  const id = useSelector(state => state.id);\n  const planet = useSelector(state => state.planet);\n  const vehicle = useSelector(state => state.vehicle);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(GetTokenFromApi());\n    dispatch(planetsApi());\n    dispatch(VehiclesApi());\n  }, []);\n\n  const onClick = () => {\n    dispatch(actions.sampleAction2(id + 1));\n    dispatch(thunkSendMessage('hello'));\n  };\n\n  const planetNameintooption1 = event => {\n    const data = event.currentTarget.value;\n    setOption1(data);\n  };\n\n  const planetNameintooption2 = event => {\n    const data = event.currentTarget.value;\n    setOption2(data);\n  };\n\n  const planetNameintooption3 = event => {\n    const data = event.currentTarget.value;\n    setOption3(data);\n  };\n\n  const planetNameintooption4 = event => {\n    const data = event.currentTarget.value;\n    setOption4(data);\n  };\n\n  const unionPlanets = [option2, option3, option4];\n  console.log(unionPlanets);\n\n  const planetFilter = () => {\n    const filter = planet.filter(data => data.name !== option2 && data.name !== option3 && data.name !== option3);\n    const list = filter.map(data => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, data.name)));\n    return list;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"message:\", ' ', message, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), \"id:\", ' ', id, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"increment id\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, option1, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    onChange: planetNameintooption1,\n    className: \"form-control\",\n    id: \"exampleFormControlSelect1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, \" \"), planetFilter()))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, option2, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    onChange: planetNameintooption2,\n    className: \"form-control\",\n    id: \"exampleFormControlSelect1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \" \"), planet.map(planets => /*#__PURE__*/React.createElement(\"option\", {\n    value: planets.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }\n  }, planets.name, ' '))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, option3, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    onChange: planetNameintooption3,\n    className: \"form-control\",\n    id: \"exampleFormControlSelect1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, \" \"), planet.map(planets => /*#__PURE__*/React.createElement(\"option\", {\n    value: planets.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 19\n    }\n  }, planets.name, ' '))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, option4, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    onChange: planetNameintooption4,\n    className: \"form-control\",\n    id: \"exampleFormControlSelect1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, \" \"), planet.map(planets => /*#__PURE__*/React.createElement(\"option\", {\n    value: planets.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  }, planets.name, ' ')))))), planet.map(planets => /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, planets.name, ' ', planets.distance)), vehicle.map(planets => /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, planets.name, ' ', planets.total_no, ' ', planets.max_distance, ' ', planets.speed, ' '))));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/goutham/typescript-sample/src/components/App.tsx"],"names":["React","useEffect","useState","useSelector","useDispatch","actions","thunkSendMessage","planetsApi","VehiclesApi","GetTokenFromApi","App","option1","setOption1","option2","setOption2","option3","setOption3","option4","setOption4","message","state","id","planet","vehicle","dispatch","onClick","sampleAction2","planetNameintooption1","event","data","currentTarget","value","planetNameintooption2","planetNameintooption3","planetNameintooption4","unionPlanets","console","log","planetFilter","filter","name","list","map","logo","planets","distance","total_no","max_distance","speed"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport * as actions from '../actions';\nimport {\n  thunkSendMessage,\n  planetsApi,\n  VehiclesApi,\n  GetTokenFromApi,\n} from '../actions/thunkActions';\nimport logo from '../logo.svg';\nimport './App.css';\nimport { State } from '../reducers';\n// import thunkSendMessage from '../actions/thunkActions'\n\nconst App = () => {\n  const [option1, setOption1] = useState<string>('');\n  const [option2, setOption2] = useState<string>('');\n  const [option3, setOption3] = useState<string>('');\n  const [option4, setOption4] = useState<string>('');\n\n\n  const message = useSelector((state: State) => state.message);\n  const id = useSelector((state: State) => state.id);\n  const planet = useSelector((state: State) => state.planet);\n  const vehicle = useSelector((state: State) => state.vehicle);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(GetTokenFromApi());\n    dispatch(planetsApi());\n    dispatch(VehiclesApi());\n  }, []);\n\n  const onClick = () => {\n    dispatch(actions.sampleAction2(id + 1));\n    dispatch(thunkSendMessage('hello'));\n  };\n\n\n  const planetNameintooption1 = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const data = event.currentTarget.value;\n    setOption1(data);\n  };\n  const planetNameintooption2 = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const data = event.currentTarget.value;\n    setOption2(data);\n  };\n  const planetNameintooption3 = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const data = event.currentTarget.value;\n    setOption3(data);\n  };\n  const planetNameintooption4 = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const data = event.currentTarget.value;\n    setOption4(data);\n  };\n  const unionPlanets:Array<string> = [option2, option3, option4];\n  console.log(unionPlanets);\n\n  const planetFilter = () => {\n    const filter = planet.filter((data) => data.name !== option2 && data.name !== option3 && data.name !== option3);\n    const list = filter.map((data) => (\n      <>\n        <option>{data.name}</option>\n\n      </>\n    ));\n    return list;\n  };\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        message:\n        {' '}\n        {message}\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        id:\n        {' '}\n        {id}\n        <button type=\"button\" onClick={onClick}>\n          increment id\n        </button>\n        <div className=\"row\">\n          <div className=\"col-sm\">\n            {option1}\n            <div className=\"form-group\">\n              <select onChange={planetNameintooption1} className=\"form-control\" id=\"exampleFormControlSelect1\">\n                <option> </option>\n                {/* {planet.map((planets) => (\n                  <option value={planets.name}>\n                    {planets.name}\n                    {' '}\n                  </option>\n                ))} */}\n                {planetFilter()}\n              </select>\n            </div>\n          </div>\n          <div className=\"col-sm\">\n            {option2}\n            <div className=\"form-group\">\n              <select onChange={planetNameintooption2} className=\"form-control\" id=\"exampleFormControlSelect1\">\n                <option> </option>\n                {planet.map((planets) => (\n                  <option value={planets.name}>\n                    {planets.name}\n                    {' '}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n          <div className=\"col-sm\">\n            {option3}\n            <div className=\"form-group\">\n              <select onChange={planetNameintooption3} className=\"form-control\" id=\"exampleFormControlSelect1\">\n                <option> </option>\n                {planet.map((planets) => (\n                  <option value={planets.name}>\n                    {planets.name}\n                    {' '}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n          <div className=\"col-sm\">\n            {option4}\n            <div className=\"form-group\">\n              <select onChange={planetNameintooption4} className=\"form-control\" id=\"exampleFormControlSelect1\">\n                <option> </option>\n                {planet.map((planets) => (\n                  <option value={planets.name}>\n                    {planets.name}\n                    {' '}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </div>\n\n        {planet.map((planets) => (\n          <h1>\n            {planets.name}\n            {' '}\n            {planets.distance}\n          </h1>\n        ))}\n        {vehicle.map((planets) => (\n          <h1>\n            {planets.name}\n            {' '}\n            {planets.total_no}\n            {' '}\n            {planets.max_distance}\n            {' '}\n            {planets.speed}\n            {' '}\n          </h1>\n        ))}\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}