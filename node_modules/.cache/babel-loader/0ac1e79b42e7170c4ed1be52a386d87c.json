{"ast":null,"code":"var _jsxFileName = \"/home/goutham/typescript-sample/src/components/Selection.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Select, Radio, Layout, Button } from 'antd';\nimport { planetsApi, VehiclesApi, GetTokenFromApi, GetResultFromApi } from '../actions/thunkActions';\nimport logo from './Logo.png';\nimport './App.css';\nimport SelectPlanet from './SelectPlanet';\nconst {\n  Header,\n  Content,\n  Footer\n} = Layout;\nconst {\n  Option\n} = Select;\nconst radioStyle = {\n  display: 'block',\n  height: '30px',\n  lineHeight: '30px'\n};\n\nconst Selection = () => {\n  // const message = useSelector((state: State) => state.message);\n  // const id = useSelector((state: State) => state.id);\n  const allPlanets = useSelector(state => state.planet);\n  const allVehicles = useSelector(state => state.vehicle);\n  const tokens = useSelector(state => state.token);\n  const dispatch = useDispatch();\n  const [selectedPlanets, setPlanets] = useState([]);\n  const [planetArray, setArray] = useState([]);\n  const [selectedVehicle, setVehicle] = useState([]);\n  const [vehicleArray, setVehicleArray] = useState([]);\n  const [time, setTime] = useState(0);\n  const [selectedPlanetsArray, setSelectedPlanetsArray] = useState([]);\n  useEffect(() => {\n    dispatch(GetTokenFromApi());\n    dispatch(planetsApi());\n    dispatch(VehiclesApi());\n  }, []); // const onClick = () => {\n  //   dispatch(actions.sampleAction2(id + 1));\n  //   dispatch(thunkSendMessage(\"hello\"));\n  // };\n\n  const onSelectPlanet = event => {\n    const selectedPlanet = event.currentTarget.value;\n    const planetDistance = allPlanets.filter(planet => planet.name === selectedPlanet);\n    const index = Number(event.currentTarget.id);\n    planetArray[index] = planetDistance[0];\n    setArray([...planetArray]);\n    const vehilceList = listVehiclesAt(index);\n    selectedPlanets[index] = selectedPlanet;\n    setPlanets([...selectedPlanets]);\n    return vehilceList;\n  };\n\n  const listPlanetOptionsAt = currentIndex => {\n    const planetList = allPlanets.filter(planet => selectedPlanets[currentIndex] === planet.name || !selectedPlanets.includes(planet.name));\n    const list = planetList.map((data, index) => /*#__PURE__*/React.createElement(\"option\", {\n      value: data.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, data.name));\n    return list;\n  };\n\n  const listVehiclesAt = currentIndex => {\n    const {\n      distance\n    } = planetArray[currentIndex]; // const vehicleList = allVehicles.filter(\n    //   (vehicle) => vehicle.max_distance >= distance,\n    // );\n\n    const vehicleOptions = allVehicles.map(vehicle => vehicle.max_distance >= distance && vehicle.total_no > 0 ? /*#__PURE__*/React.createElement(Radio, {\n      style: radioStyle,\n      value: vehicle.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, vehicle.name, \"(\", vehicle.total_no, \")\") : /*#__PURE__*/React.createElement(Radio, {\n      style: radioStyle,\n      value: vehicle.name,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, vehicle.name, \"(\", vehicle.total_no, \")\"));\n    return vehicleOptions;\n  };\n\n  const listVehicles = () => {\n    const vehicleOptions = allVehicles.map(vehicle => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Radio, {\n      style: radioStyle,\n      value: vehicle.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, vehicle.name, \"(\", vehicle.total_no, \")\")));\n    return vehicleOptions;\n  };\n\n  const vehicleOnChange = e => {\n    const optionSelected = e.target.value;\n    const allSelectedPlanets = allVehicles.filter(vehicle => vehicle.name === optionSelected);\n    const currentIndex = Number(e.target.name);\n    vehicleArray[currentIndex] = allSelectedPlanets[0];\n    setVehicleArray([...vehicleArray]);\n    console.log('selected Vehicles ::', vehicleArray);\n    const prevOption = selectedVehicle[currentIndex];\n    selectedVehicle[currentIndex] = optionSelected;\n    setVehicle([...selectedVehicle]);\n    calculateTime(currentIndex, prevOption, optionSelected);\n\n    if (prevOption != optionSelected && prevOption != undefined) {\n      const indexOfVehicle = allVehicles.map(e => e.name).indexOf(prevOption);\n      allVehicles[indexOfVehicle].total_no = allVehicles[indexOfVehicle].total_no + 1;\n      const indexOfVehicle2 = allVehicles.map(e => e.name).indexOf(optionSelected);\n      allVehicles[indexOfVehicle2].total_no = allVehicles[indexOfVehicle2].total_no - 1;\n    } else {\n      const indexOfVehicle = allVehicles.map(e => e.name).indexOf(optionSelected);\n      allVehicles[indexOfVehicle].total_no = allVehicles[indexOfVehicle].total_no - 1;\n    }\n  };\n\n  const calculateTime = (index, previousOption, optionSelected) => {\n    if (optionSelected !== previousOption && previousOption !== undefined) {\n      const prevTimeIndex = allVehicles.map(e => e.name).indexOf(previousOption);\n      const prevTime = planetArray[index].distance / allVehicles[prevTimeIndex].speed;\n      const indexTime = time + planetArray[index].distance / vehicleArray[index].speed - prevTime;\n      setTime(indexTime);\n    } else {\n      const indextime = time + planetArray[index].distance / vehicleArray[index].speed;\n      setTime(indextime);\n    }\n  };\n\n  const findFalcone = () => {\n    const tokenValue = String(Object.values(tokens));\n    const selectedData = {\n      token: tokenValue,\n      planet_names: selectedPlanets,\n      vehicle_names: selectedVehicle\n    };\n    dispatch(GetResultFromApi(selectedData));\n    console.log(selectedData);\n  };\n\n  const onSelectChange = (value, currentIndex) => {\n    const selectedPlanet = value;\n    const planetDistance = allPlanets.filter(planet => planet.name === selectedPlanet);\n    const index = currentIndex; // planetArray[index] = planetDistance[0];\n    // setArray([...planetArray]);\n    // const vehilceList = listVehiclesAt(index);\n\n    selectedPlanetsArray[index] = selectedPlanet;\n    setSelectedPlanetsArray([...selectedPlanetsArray]);\n    console.log('parent Componet ::', value, selectedPlanetsArray); // return vehilceList;\n  };\n\n  const listOptions = currentIndex => {\n    const planetList = allPlanets.filter(planet => selectedPlanetsArray[currentIndex] === planet.name || !selectedPlanetsArray.includes(planet.name));\n    const list = planetList.map((data, index) => /*#__PURE__*/React.createElement(Option, {\n      value: data.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 7\n      }\n    }, data.name));\n    console.log('options', list);\n    return list;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"falcone-main-layout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Layout, {\n    className: \"layout \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"falcone-logo\",\n    src: logo,\n    alt: \"falcone-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"finding-falcone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 15\n    }\n  }, \"FINDING FALCONE\"))), /*#__PURE__*/React.createElement(Content, {\n    style: {\n      padding: '0 50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"site-layout-content falcone-row-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"falcone-text text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 15\n    }\n  }, \"Select 4 planets and the space vehicles to search in these planets\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"float-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  }, \"TIME TAKEN:\", time), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectPlanet, {\n    index: 0,\n    onSelectPlanetChange: onSelectChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 19\n    }\n  }, listOptions(0))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col falcone-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"falcone-planet-h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 19\n    }\n  }, \"Planet 2 \"), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"falcone-selectPlanets\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 19\n    }\n  }, \"Select the planet \"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"falcone-planet-select\",\n    value: selectedPlanets[1],\n    id: \"1\",\n    onChange: onSelectPlanet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 21\n    }\n  }), listPlanetOptionsAt(1)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"align-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"falcone-selectSpaceShip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 21\n    }\n  }, \"Select the space ship :\"), selectedPlanets[1] === undefined ? /*#__PURE__*/React.createElement(Radio.Group, {\n    name: \"1\",\n    onChange: vehicleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 25\n    }\n  }, ' ', listVehicles()) : /*#__PURE__*/React.createElement(Radio.Group, {\n    name: \"1\",\n    onChange: vehicleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 25\n    }\n  }, ' ', listVehiclesAt(1)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"falcone-planet-h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 19\n    }\n  }, \"Planet 3 \"), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"falcone-selectPlanets\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 19\n    }\n  }, \"Select the planet \"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"falcone-planet-select\",\n    value: selectedPlanets[2],\n    id: \"2\",\n    onChange: onSelectPlanet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 21\n    }\n  }), listPlanetOptionsAt(2)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"falcone-selectSpaceShip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 21\n    }\n  }, \"Select the space ship \"), selectedPlanets[2] === undefined ? /*#__PURE__*/React.createElement(Radio.Group, {\n    name: \"2\",\n    onChange: vehicleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 25\n    }\n  }, ' ', listVehicles()) : /*#__PURE__*/React.createElement(Radio.Group, {\n    name: \"2\",\n    onChange: vehicleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 25\n    }\n  }, ' ', listVehiclesAt(2)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"falcone-planet-h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 19\n    }\n  }, \"Planet 4 \"), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"falcone-selectPlanets\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 19\n    }\n  }, \"Select the planet \"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"falcone-planet-select\",\n    value: selectedPlanets[3],\n    id: \"3\",\n    onChange: onSelectPlanet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 21\n    }\n  }), listPlanetOptionsAt(3)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"falcone-selectSpaceShip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 21\n    }\n  }, \"Select the space ship \"), selectedPlanets[3] === undefined ? /*#__PURE__*/React.createElement(Radio.Group, {\n    name: \"3\",\n    onChange: vehicleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 25\n    }\n  }, ' ', listVehicles()) : /*#__PURE__*/React.createElement(Radio.Group, {\n    name: \"3\",\n    onChange: vehicleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 25\n    }\n  }, ' ', listVehiclesAt(3))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: findFalcone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 17\n    }\n  }, \"FIND FALCONE\")))), /*#__PURE__*/React.createElement(Footer, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 11\n    }\n  }, \"Created for GeekTrust\"))));\n};\n\nexport default Selection;","map":{"version":3,"sources":["/home/goutham/typescript-sample/src/components/Selection.tsx"],"names":["React","useEffect","useState","useSelector","useDispatch","Select","Radio","Layout","Button","planetsApi","VehiclesApi","GetTokenFromApi","GetResultFromApi","logo","SelectPlanet","Header","Content","Footer","Option","radioStyle","display","height","lineHeight","Selection","allPlanets","state","planet","allVehicles","vehicle","tokens","token","dispatch","selectedPlanets","setPlanets","planetArray","setArray","selectedVehicle","setVehicle","vehicleArray","setVehicleArray","time","setTime","selectedPlanetsArray","setSelectedPlanetsArray","onSelectPlanet","event","selectedPlanet","currentTarget","value","planetDistance","filter","name","index","Number","id","vehilceList","listVehiclesAt","listPlanetOptionsAt","currentIndex","planetList","includes","list","map","data","distance","vehicleOptions","max_distance","total_no","listVehicles","vehicleOnChange","e","optionSelected","target","allSelectedPlanets","console","log","prevOption","calculateTime","undefined","indexOfVehicle","indexOf","indexOfVehicle2","previousOption","prevTimeIndex","prevTime","speed","indexTime","indextime","findFalcone","tokenValue","String","Object","values","selectedData","planet_names","vehicle_names","onSelectChange","listOptions","padding","textAlign"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, ChangeEvent } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Select, Radio, Layout, Button,\n} from 'antd';\nimport { RadioChangeEvent } from 'antd/lib/radio/interface';\nimport {\n  thunkSendMessage,\n  planetsApi,\n  VehiclesApi,\n  GetTokenFromApi,\n  GetResultFromApi,\n} from '../actions/thunkActions';\n\n\nimport logo from './Logo.png';\nimport './App.css';\nimport { State } from '../reducers';\nimport { Planet, Vehicle, FalconeData } from '../types/types';\nimport SelectPlanet from './SelectPlanet';\n\n\nconst { Header, Content, Footer } = Layout;\nconst { Option } = Select;\n\nconst radioStyle = {\n  display: 'block',\n  height: '30px',\n  lineHeight: '30px',\n};\nconst Selection = () => {\n  // const message = useSelector((state: State) => state.message);\n  // const id = useSelector((state: State) => state.id);\n  const allPlanets = useSelector((state: State) => state.planet);\n  const allVehicles = useSelector((state: State) => state.vehicle);\n  const tokens = useSelector((state:State) => state.token);\n  const dispatch = useDispatch();\n\n  const [selectedPlanets, setPlanets] = useState<Array<string>>([]);\n  const [planetArray, setArray] = useState<Planet[]>([]);\n  const [selectedVehicle, setVehicle] = useState <Array<string>>([]);\n  const [vehicleArray, setVehicleArray] = useState <Vehicle[]>([]);\n  const [time, setTime] = useState <number>(0);\n  const [selectedPlanetsArray, setSelectedPlanetsArray] = useState <string[]>([]);\n\n  useEffect(() => {\n    dispatch(GetTokenFromApi());\n    dispatch(planetsApi());\n    dispatch(VehiclesApi());\n  }, []);\n\n  // const onClick = () => {\n  //   dispatch(actions.sampleAction2(id + 1));\n  //   dispatch(thunkSendMessage(\"hello\"));\n  // };\n\n\n  const onSelectPlanet = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const selectedPlanet = event.currentTarget.value;\n    const planetDistance = allPlanets.filter(\n      (planet) => planet.name === selectedPlanet,\n    );\n    const index = Number(event.currentTarget.id);\n    planetArray[index] = planetDistance[0];\n    setArray([...planetArray]);\n    const vehilceList = listVehiclesAt(index);\n    selectedPlanets[index] = selectedPlanet;\n    setPlanets([...selectedPlanets]);\n    return vehilceList;\n  };\n\n  const listPlanetOptionsAt = (currentIndex: number) => {\n    const planetList = allPlanets.filter(\n      (planet) => selectedPlanets[currentIndex] === planet.name\n        || !selectedPlanets.includes(planet.name),\n    );\n    const list = planetList.map((data, index) => (\n      <option value={data.name}>{data.name}</option>\n    ));\n\n\n    return list;\n  };\n\n\n  const listVehiclesAt = (currentIndex: number) => {\n    const { distance } = planetArray[currentIndex];\n\n    // const vehicleList = allVehicles.filter(\n    //   (vehicle) => vehicle.max_distance >= distance,\n    // );\n    const vehicleOptions = allVehicles.map((vehicle) => (\n      vehicle.max_distance >= distance && vehicle.total_no > 0 ? (\n        <Radio style={radioStyle} value={vehicle.name}>\n          {vehicle.name}\n          (\n          {vehicle.total_no}\n          )\n        </Radio>\n      )\n        : (\n          <Radio style={radioStyle} value={vehicle.name} disabled>\n            {vehicle.name}\n            (\n            {vehicle.total_no}\n            )\n          </Radio>\n        )\n    ));\n    return vehicleOptions;\n  };\n\n  const listVehicles = () => {\n    const vehicleOptions = allVehicles.map((vehicle) => (\n      <>\n        <Radio style={radioStyle} value={vehicle.name}>\n          {vehicle.name}\n          (\n          {vehicle.total_no}\n          )\n        </Radio>\n      </>\n    ));\n    return vehicleOptions;\n  };\n\n\n  const vehicleOnChange = (e:RadioChangeEvent) => {\n    const optionSelected = e.target.value;\n    const allSelectedPlanets = allVehicles.filter(\n      (vehicle) => vehicle.name === optionSelected,\n    );\n    const currentIndex = Number(e.target.name);\n    vehicleArray[currentIndex] = allSelectedPlanets[0];\n    setVehicleArray([...vehicleArray]);\n    console.log('selected Vehicles ::', vehicleArray);\n    const prevOption = selectedVehicle[currentIndex];\n    selectedVehicle[currentIndex] = optionSelected;\n    setVehicle([...selectedVehicle]);\n    calculateTime(currentIndex, prevOption, optionSelected);\n    if (prevOption != optionSelected && prevOption != undefined) {\n      const indexOfVehicle = allVehicles.map((e) => e.name).indexOf(prevOption);\n      allVehicles[indexOfVehicle].total_no = allVehicles[indexOfVehicle].total_no + 1;\n      const indexOfVehicle2 = allVehicles.map((e) => e.name).indexOf(optionSelected);\n      allVehicles[indexOfVehicle2].total_no = allVehicles[indexOfVehicle2].total_no - 1;\n    } else {\n      const indexOfVehicle = allVehicles.map((e) => e.name).indexOf(optionSelected);\n      allVehicles[indexOfVehicle].total_no = allVehicles[indexOfVehicle].total_no - 1;\n    }\n  };\n  const calculateTime = (index:number, previousOption:string, optionSelected:string) => {\n    if (optionSelected !== previousOption && previousOption !== undefined) {\n      const prevTimeIndex = allVehicles.map((e) => e.name).indexOf(previousOption);\n      const prevTime = planetArray[index].distance / allVehicles[prevTimeIndex].speed;\n      const indexTime = time + planetArray[index].distance / vehicleArray[index].speed - prevTime;\n      setTime(indexTime);\n    } else {\n      const indextime = time + planetArray[index].distance / vehicleArray[index].speed;\n      setTime(indextime);\n    }\n  };\n\n  const findFalcone = () => {\n    const tokenValue = String(Object.values(tokens));\n    const selectedData = {\n      token: tokenValue,\n      planet_names: selectedPlanets,\n      vehicle_names: selectedVehicle,\n    };\n\n\n    dispatch(GetResultFromApi(selectedData));\n    console.log(selectedData);\n  };\n  const onSelectChange = (value:string, currentIndex:number) => {\n    const selectedPlanet = value;\n    const planetDistance = allPlanets.filter(\n      (planet) => planet.name === selectedPlanet,\n    );\n    const index = currentIndex;\n    // planetArray[index] = planetDistance[0];\n    // setArray([...planetArray]);\n    // const vehilceList = listVehiclesAt(index);\n    selectedPlanetsArray[index] = selectedPlanet;\n    setSelectedPlanetsArray([...selectedPlanetsArray]);\n    console.log('parent Componet ::', value, selectedPlanetsArray);\n    // return vehilceList;\n  };\n  const listOptions = (currentIndex:number) => {\n    const planetList = allPlanets.filter(\n      (planet) => selectedPlanetsArray[currentIndex] === planet.name\n        || !selectedPlanetsArray.includes(planet.name),\n    );\n    const list = planetList.map((data, index) => (\n      <Option value={data.name}>{data.name}</Option>\n    ));\n    console.log('options', list);\n\n    return list;\n  };\n\n  return (\n    <div>\n      <div className=\"falcone-main-layout\">\n        <Layout className=\"layout \">\n          <Header>\n            <div className=\"logo\">\n              <img className=\"falcone-logo\" src={logo} alt=\"falcone-logo\" />\n              <h2 className=\"finding-falcone\">FINDING FALCONE</h2>\n            </div>\n          </Header>\n          <Content style={{ padding: '0 50px' }}>\n            <div className=\"site-layout-content falcone-row-primary\">\n              <h5 className=\"falcone-text text-center\">Select 4 planets and the space vehicles to search in these planets</h5>\n              <p className=\"float-left\">\n                TIME TAKEN:\n                {time}\n              </p>\n              <br />\n              <br />\n              <div className=\"row\">\n                <div className=\"col\">\n                  {/* <h5 className=\"falcone-planet-h5\">Planet 1 </h5> */}\n                  {/* <h6 className=\"falcone-selectPlanets\">Select the planet </h6> */}\n                  {/* <select\n                    className=\"falcone-planet-select\"\n                    id=\"0\"\n                    value={selectedPlanets[0]}\n                    onChange={onSelectPlanet}\n                  >\n                    <option />\n\n                    {listPlanetOptionsAt(0)}\n                  </select> */}\n                  <SelectPlanet index={0} onSelectPlanetChange={onSelectChange}>\n                    {listOptions(0)}\n                  </SelectPlanet>\n                  {/* <Select value={selectedPlanets[0]} style={{ width: 120 }} onChange={handleChange}>\n                    <Option value=\" \"> </Option>\n                    {listPlanetOptionsAt(0)}\n                  </Select> */}\n                  {/* <div>\n                    <h6 className=\"falcone-selectSpaceShip\">Select the space ship </h6>\n\n                    {selectedPlanets[0] === undefined\n                      ? (\n                        <Radio.Group name=\"0\" onChange={vehicleOnChange}>\n                          {' '}\n                          {listVehicles()}\n                        </Radio.Group>\n                      )\n                      : (\n                        <Radio.Group name=\"0\" onChange={vehicleOnChange}>\n                          {' '}\n                          {listVehiclesAt(0)}\n                        </Radio.Group>\n                      )}\n                  </div> */}\n                  {/* {\n                    selectedPlanets[0] === undefined ? \"\" :\n                     <Radio.Group  name=\"0\" onChange={vehicleOnChange} > {listVehiclesAt(0)}\n                  </Radio.Group>\n                }\n                 */}\n\n                </div>\n                <div className=\"col falcone-col\">\n                  <h5 className=\"falcone-planet-h5\">Planet 2 </h5>\n                  <h6 className=\"falcone-selectPlanets\">Select the planet </h6>\n                  <select\n                    className=\"falcone-planet-select\"\n                    value={selectedPlanets[1]}\n                    id=\"1\"\n                    onChange={onSelectPlanet}\n                  >\n                    <option />\n                    {listPlanetOptionsAt(1)}\n                  </select>\n                  {/* <SelectPlanet index={1} onSelectPlanetChange={onSelectChange} /> */}\n                  <div className=\"align-left\">\n                    <h6 className=\"falcone-selectSpaceShip\">Select the space ship :</h6>\n                    {selectedPlanets[1] === undefined\n                      ? (\n                        <Radio.Group name=\"1\" onChange={vehicleOnChange}>\n                          {' '}\n                          {listVehicles()}\n                        </Radio.Group>\n                      )\n                      : (\n                        <Radio.Group name=\"1\" onChange={vehicleOnChange}>\n                          {' '}\n                          {listVehiclesAt(1)}\n                        </Radio.Group>\n                      )}\n                  </div>\n                  {/* {\n                    selectedPlanets[1] === undefined ? \"\" :\n                    <Radio.Group  name=\"1\" onChange={vehicleOnChange} > {listVehiclesAt(1)}\n                 </Radio.Group>\n                } */}\n                </div>\n                <div className=\"col\">\n                  <h5 className=\"falcone-planet-h5\">Planet 3 </h5>\n                  <h6 className=\"falcone-selectPlanets\">Select the planet </h6>\n                  <select\n                    className=\"falcone-planet-select\"\n                    value={selectedPlanets[2]}\n                    id=\"2\"\n                    onChange={onSelectPlanet}\n                  >\n                    <option />\n                    {listPlanetOptionsAt(2)}\n                  </select>\n                  <div>\n                    <h6 className=\"falcone-selectSpaceShip\">Select the space ship </h6>\n                    {selectedPlanets[2] === undefined\n                      ? (\n                        <Radio.Group name=\"2\" onChange={vehicleOnChange}>\n                          {' '}\n                          {listVehicles()}\n                        </Radio.Group>\n                      )\n                      : (\n                        <Radio.Group name=\"2\" onChange={vehicleOnChange}>\n                          {' '}\n                          {listVehiclesAt(2)}\n                        </Radio.Group>\n                      )}\n                  </div>\n                  {/* {\n                    selectedPlanets[2] === undefined ? \"\" :\n                    <Radio.Group  name=\"2\" onChange={vehicleOnChange} > {listVehiclesAt(2)}\n                 </Radio.Group>\n                } */}\n                </div>\n                <div className=\"col\">\n                  <h5 className=\"falcone-planet-h5\">Planet 4 </h5>\n                  <h6 className=\"falcone-selectPlanets\">Select the planet </h6>\n                  <select\n                    className=\"falcone-planet-select\"\n                    value={selectedPlanets[3]}\n                    id=\"3\"\n                    onChange={onSelectPlanet}\n                  >\n                    <option />\n                    {listPlanetOptionsAt(3)}\n                  </select>\n                  <div>\n                    <h6 className=\"falcone-selectSpaceShip\">Select the space ship </h6>\n                    {selectedPlanets[3] === undefined\n                      ? (\n                        <Radio.Group name=\"3\" onChange={vehicleOnChange}>\n                          {' '}\n                          {listVehicles()}\n                        </Radio.Group>\n                      )\n                      : (\n                        <Radio.Group name=\"3\" onChange={vehicleOnChange}>\n                          {' '}\n                          {listVehiclesAt(3)}\n                        </Radio.Group>\n                      )}\n                  </div>\n                  {/* {\n                    selectedPlanets[3] === undefined ? \"\" :\n                    <Radio.Group  name=\"3\" onChange={vehicleOnChange} > {listVehiclesAt(3)}\n                 </Radio.Group>\n                } */}\n                </div>\n              </div>\n              <div className=\"d-flex justify-content-center\">\n                <Button type=\"primary\" onClick={findFalcone}>FIND FALCONE</Button>\n              </div>\n            </div>\n          </Content>\n          <Footer style={{ textAlign: 'center' }}>Created for GeekTrust</Footer>\n        </Layout>\n      </div>\n    </div>\n  );\n};\nexport default Selection;\n"]},"metadata":{},"sourceType":"module"}