{"ast":null,"code":"var _jsxFileName = \"/home/goutham/typescript-sample/src/components/SelectPlanet.tsx\";\nimport React from 'react';\nimport { Select, Radio } from 'antd';\nimport { useSelector } from 'react-redux';\nimport './SelectedPlanets.css';\nconst radioStyle = {\n  display: 'block',\n  height: '30px',\n  lineHeight: '30px'\n};\nconst {\n  Option\n} = Select;\n\nconst SelectPlanet = props => {\n  const allPlanets = useSelector(state => state.planet);\n  const allVehicles = useSelector(state => state.vehicle);\n\n  function handleChange(value) {\n    props.onSelectPlanetChange(value, props.index);\n    console.log(`selected ${value}`);\n  }\n\n  const listOptionsInComponent = () => {\n    const planetList = allPlanets.filter(planet => props.planets[props.index] === planet.name || !props.planets.includes(planet.name));\n    const list = planetList.map((data, index) => /*#__PURE__*/React.createElement(Option, {\n      value: data.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, data.name));\n    console.log('options', list);\n    return list;\n  };\n\n  const listVehiclesAt = value => {\n    const {\n      distance\n    } = props.planetsArray[value]; // const vehicleList = allVehicles.filter(\n    //   (vehicle) => vehicle.max_distance >= distance,\n    // );\n\n    const vehicleOptions = allVehicles.map(vehicle => vehicle.max_distance >= distance && vehicle.total_no > 0 ? /*#__PURE__*/React.createElement(Radio, {\n      style: radioStyle,\n      value: vehicle.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, vehicle.name, \"(\", vehicle.total_no, \")\") : /*#__PURE__*/React.createElement(Radio, {\n      style: radioStyle,\n      value: vehicle.name,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, vehicle.name, \"(\", vehicle.total_no, \")\"));\n    return vehicleOptions;\n  };\n\n  const listVehicles = () => {\n    const vehicleOptions = allVehicles.map(vehicle => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Radio, {\n      style: radioStyle,\n      value: vehicle.name,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, vehicle.name, \"(\", vehicle.total_no, \")\")));\n    return vehicleOptions;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"falcone-planet-h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, \"Planet\", ' ', props.index + 1, ' '), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"falcone-selectPlanets\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, \"Select the planet \"), /*#__PURE__*/React.createElement(Select, {\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, listOptionsInComponent()), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"falcone-selectSpaceShip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"Select the space ship \"), props.planets[props.index] === undefined ? /*#__PURE__*/React.createElement(Radio.Group, {\n    name: String(props.index),\n    onChange: props.handleRadioChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, ' ', listVehicles()) : /*#__PURE__*/React.createElement(Radio.Group, {\n    name: String(props.index),\n    onChange: props.handleRadioChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, ' ', listVehiclesAt(props.index))));\n};\n\nexport default SelectPlanet;","map":{"version":3,"sources":["/home/goutham/typescript-sample/src/components/SelectPlanet.tsx"],"names":["React","Select","Radio","useSelector","radioStyle","display","height","lineHeight","Option","SelectPlanet","props","allPlanets","state","planet","allVehicles","vehicle","handleChange","value","onSelectPlanetChange","index","console","log","listOptionsInComponent","planetList","filter","planets","name","includes","list","map","data","listVehiclesAt","distance","planetsArray","vehicleOptions","max_distance","total_no","listVehicles","undefined","String","handleRadioChange"],"mappings":"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","sourcesContent":["import React, { useState, ReactNode } from 'react';\nimport { Select, Radio } from 'antd';\nimport { useSelector } from 'react-redux';\nimport { RadioChangeEvent } from 'antd/lib/radio/interface';\nimport { State } from '../reducers';\nimport { Planet } from '../types/types';\n\nimport './SelectedPlanets.css';\n\ninterface MyProps {\n  index: number;\n  onSelectPlanetChange(value: string, index: number): void;\n  planets: string[];\n  planetsArray:Planet[];\n  handleRadioChange(e: RadioChangeEvent):void;\n}\nconst radioStyle = {\n  display: 'block',\n  height: '30px',\n  lineHeight: '30px',\n};\n\nconst { Option } = Select;\nconst SelectPlanet: React.FunctionComponent<MyProps> = (props) => {\n  const allPlanets = useSelector((state: State) => state.planet);\n  const allVehicles = useSelector((state: State) => state.vehicle);\n\n  function handleChange(value: string) {\n    props.onSelectPlanetChange(value, props.index);\n    console.log(`selected ${value}`);\n  }\n  const listOptionsInComponent = () => {\n    const planetList = allPlanets.filter(\n      (planet) => props.planets[props.index] === planet.name\n        || !props.planets.includes(planet.name),\n    );\n    const list = planetList.map((data, index) => (\n      <Option value={data.name}>{data.name}</Option>\n    ));\n    console.log('options', list);\n\n    return list;\n  };\n  const listVehiclesAt = (value:number) => {\n    const { distance } = props.planetsArray[value];\n\n    // const vehicleList = allVehicles.filter(\n    //   (vehicle) => vehicle.max_distance >= distance,\n    // );\n    const vehicleOptions = allVehicles.map((vehicle) => (\n      vehicle.max_distance >= distance && vehicle.total_no > 0 ? (\n        <Radio style={radioStyle} value={vehicle.name}>\n          {vehicle.name}\n          (\n          {vehicle.total_no}\n          )\n        </Radio>\n      )\n        : (\n          <Radio style={radioStyle} value={vehicle.name} disabled>\n            {vehicle.name}\n            (\n            {vehicle.total_no}\n            )\n          </Radio>\n        )\n    ));\n    return vehicleOptions;\n  };\n\n  const listVehicles = () => {\n    const vehicleOptions = allVehicles.map((vehicle) => (\n      <>\n        <Radio style={radioStyle} value={vehicle.name} disabled>\n          {vehicle.name}\n          (\n          {vehicle.total_no}\n          )\n        </Radio>\n      </>\n    ));\n    return vehicleOptions;\n  };\n\n\n  return (\n    <div>\n      <h5 className=\"falcone-planet-h5\">\n        Planet\n        {' '}\n        {props.index + 1}\n        {' '}\n      </h5>\n      <h6 className=\"falcone-selectPlanets\">Select the planet </h6>\n      <Select onChange={handleChange}>{listOptionsInComponent()}</Select>\n      <div>\n        <h6 className=\"falcone-selectSpaceShip\">Select the space ship </h6>\n        {props.planets[props.index] === undefined ? (\n          <Radio.Group name={String(props.index)} onChange={props.handleRadioChange}>\n            {' '}\n            {listVehicles()}\n          </Radio.Group>\n        ) : (\n          <Radio.Group name={String(props.index)} onChange={props.handleRadioChange}>\n            {' '}\n            {listVehiclesAt(props.index)}\n          </Radio.Group>\n        )}\n      </div>\n    </div>\n  );\n};\nexport default SelectPlanet;\n"]},"metadata":{},"sourceType":"module"}