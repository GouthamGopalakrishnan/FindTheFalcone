{"ast":null,"code":"var _jsxFileName = \"/home/goutham/typescript-sample/src/components/Selection.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Select } from 'antd';\nimport { Radio } from 'antd';\nimport * as actions from \"../actions\";\nimport { thunkSendMessage, planetsApi, VehiclesApi, GetTokenFromApi } from \"../actions/thunkActions\";\nimport logo from \"../logo.svg\";\nimport \"./App.css\";\nconst {\n  Option\n} = Select;\nconst radioStyle = {\n  display: 'block',\n  height: '30px',\n  lineHeight: '30px'\n};\n\nconst Selection = () => {\n  const message = useSelector(state => state.message);\n  const id = useSelector(state => state.id);\n  const allPlanets = useSelector(state => state.planet);\n  const allVehicles = useSelector(state => state.vehicle);\n  const dispatch = useDispatch();\n  const [selectedPlanets, setPlanets] = useState([]);\n  const [planetArray, setArray] = useState([]);\n  const [selectedVehicle, setVehicle] = useState([]);\n  useEffect(() => {\n    dispatch(GetTokenFromApi());\n    dispatch(planetsApi());\n    dispatch(VehiclesApi());\n  }, []);\n\n  const onClick = () => {\n    dispatch(actions.sampleAction2(id + 1));\n    dispatch(thunkSendMessage(\"hello\"));\n  };\n\n  const onSelectPlanet = event => {\n    const selectedPlanet = event.currentTarget.value;\n    const planetDistance = allPlanets.filter(planet => planet.name === selectedPlanet);\n    console.log(\"planetDistance\", planetDistance);\n    const index = Number(event.currentTarget.id);\n    planetArray[index] = planetDistance[0];\n    setArray([...planetArray]);\n    const vehilceList = listVehiclesAt(index);\n    console.log(\"vehicleList::\", vehilceList);\n    console.log(\"PlanetArray\", planetArray, index, selectedPlanet);\n    selectedPlanets[index] = selectedPlanet;\n    setPlanets([...selectedPlanets]);\n    console.log(\"onSelectPlanet::\", selectedPlanets);\n    return vehilceList;\n  };\n\n  const listPlanetOptionsAt = currentIndex => {\n    const planetList = allPlanets.filter(planet => selectedPlanets[currentIndex] === planet.name || !selectedPlanets.includes(planet.name));\n    const list = planetList.map((data, index) => /*#__PURE__*/React.createElement(\"option\", {\n      value: data.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, data.name));\n    console.log(\"showPlanets::\", planetList);\n    return list;\n  };\n\n  const listVehiclesAt = currentIndex => {\n    const distance = planetArray[currentIndex].distance;\n    const vehicleList = allVehicles.filter(vehicle => vehicle.max_distance >= distance);\n    const vehicleOptions = vehicleList.map(vehicle => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Radio, {\n      style: radioStyle,\n      value: vehicle.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, vehicle.name)));\n    return vehicleOptions;\n  };\n\n  const vehicleOnChange = e => {\n    const optionSelected = e.target.value;\n    const currentIndex = e.target.id;\n    selectedVehicle[currentIndex] = optionSelected;\n    setVehicle([...selectedVehicle]);\n    console.log(\"selectedVehicle\", e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, \"message: \", message, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }), \"id: \", id, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, \"increment id\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    id: \"0\",\n    value: selectedPlanets[0],\n    onChange: onSelectPlanet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }), listPlanetOptionsAt(0)), selectedPlanets[0] === undefined ? \"\" : /*#__PURE__*/React.createElement(Radio.Group, {\n    name: \"0\",\n    onChange: vehicleOnChange,\n    value: selectedVehicle[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 22\n    }\n  }, \" \", listVehiclesAt(0))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    value: selectedPlanets[1],\n    id: \"1\",\n    onChange: onSelectPlanet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }), listPlanetOptionsAt(1)), selectedPlanets[1] === undefined ? \"\" : /*#__PURE__*/React.createElement(Radio.Group, {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 58\n    }\n  }, \" \", listVehiclesAt(1))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    value: selectedPlanets[2],\n    id: \"2\",\n    onChange: onSelectPlanet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }), listPlanetOptionsAt(2)), selectedPlanets[2] === undefined ? \"\" : listVehiclesAt(2)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    value: selectedPlanets[3],\n    id: \"3\",\n    onChange: onSelectPlanet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }), listPlanetOptionsAt(3)), selectedPlanets[3] === undefined ? \"\" : listVehiclesAt(3))))));\n};\n\nexport default Selection; // import { Radio, Input } from 'antd';\n// class App extends React.Component {\n//   state = {\n//     value: 1,\n//   };\n//   onChange = e => {\n//     console.log('radio checked', e.target.value);\n//     this.setState({\n//       value: e.target.value,\n//     });\n//   };\n//   render() {\n//     const radioStyle = {\n//       display: 'block',\n//       height: '30px',\n//       lineHeight: '30px',\n//     };\n//     const { value } = this.state;\n//     return (\n//       <Radio.Group onChange={this.onChange} value={value}>\n//         <Radio style={radioStyle} value={1}>\n//           Option A\n//         </Radio>\n//         <Radio style={radioStyle} value={2}>\n//           Option B\n//         </Radio>\n//         <Radio style={radioStyle} value={3}>\n//           Option C\n//         </Radio>\n//         <Radio style={radioStyle} value={4}>\n//           More...\n//           {value === 4 ? <Input style={{ width: 100, marginLeft: 10 }} /> : null}\n//         </Radio>\n//       </Radio.Group>\n//     );\n//   }\n// }\n// ReactDOM.render(<App />, mountNode);","map":{"version":3,"sources":["/home/goutham/typescript-sample/src/components/Selection.tsx"],"names":["React","useEffect","useState","useSelector","useDispatch","Select","Radio","actions","thunkSendMessage","planetsApi","VehiclesApi","GetTokenFromApi","Option","radioStyle","display","height","lineHeight","Selection","message","state","id","allPlanets","planet","allVehicles","vehicle","dispatch","selectedPlanets","setPlanets","planetArray","setArray","selectedVehicle","setVehicle","onClick","sampleAction2","onSelectPlanet","event","selectedPlanet","currentTarget","value","planetDistance","filter","name","console","log","index","Number","vehilceList","listVehiclesAt","listPlanetOptionsAt","currentIndex","planetList","includes","list","map","data","distance","vehicleList","max_distance","vehicleOptions","vehicleOnChange","e","optionSelected","target","logo","undefined"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, ChangeEvent } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Select } from 'antd';\nimport { Radio , Input} from 'antd';\n\nimport * as actions from \"../actions\";\nimport {\n  thunkSendMessage,\n  planetsApi,\n  VehiclesApi,\n  GetTokenFromApi,\n} from \"../actions/thunkActions\";\nimport logo from \"../logo.svg\";\nimport \"./App.css\";\nimport { State } from \"../reducers\";\nimport { Planet } from \"../types/types\";\nimport { RadioChangeEvent } from \"antd/lib/radio/interface\";\nconst { Option } = Select;\n\nconst radioStyle = {\n  display: 'block',\n  height: '30px',\n  lineHeight: '30px',\n};\nconst Selection = () => {\n  const message = useSelector((state: State) => state.message);\n  const id = useSelector((state: State) => state.id);\n  const allPlanets = useSelector((state: State) => state.planet);\n  const allVehicles = useSelector((state: State) => state.vehicle);\n  const dispatch = useDispatch();\n\n  const [selectedPlanets, setPlanets] = useState<Array<string>>([]);\n  const [planetArray, setArray] = useState<Planet[]>([]);\n  const [selectedVehicle,setVehicle] = useState <Array<string>>([]);\n\n  useEffect(() => {\n    dispatch(GetTokenFromApi());\n    dispatch(planetsApi());\n    dispatch(VehiclesApi());\n  }, []);\n\n  const onClick = () => {\n    dispatch(actions.sampleAction2(id + 1));\n    dispatch(thunkSendMessage(\"hello\"));\n  };\n  const onSelectPlanet = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const selectedPlanet = event.currentTarget.value;\n    const planetDistance = allPlanets.filter(\n      (planet) => planet.name === selectedPlanet\n    );\n    console.log(\"planetDistance\", planetDistance);\n    const index = Number(event.currentTarget.id);\n    planetArray[index] = planetDistance[0];\n    setArray([...planetArray]);\n    const vehilceList =listVehiclesAt(index);\n    console.log(\"vehicleList::\",vehilceList);\n    console.log(\"PlanetArray\", planetArray, index, selectedPlanet);\n    selectedPlanets[index] = selectedPlanet;\n    setPlanets([...selectedPlanets]);\n    console.log(\"onSelectPlanet::\", selectedPlanets);\n    return vehilceList;\n\n  };\n\n  const listPlanetOptionsAt = (currentIndex: number) => {\n    const planetList = allPlanets.filter(\n      (planet) =>\n        selectedPlanets[currentIndex] === planet.name ||\n        !selectedPlanets.includes(planet.name)\n    );\n    const list = planetList.map((data, index) => (\n      <option value={data.name}>{data.name}</option>\n    ));\n    \n\n    console.log(\"showPlanets::\", planetList);\n    return list;\n    \n    \n  };\n\n  const listVehiclesAt = (currentIndex: number) => {\n    const distance: number = planetArray[currentIndex].distance ;\n    \n    const vehicleList = allVehicles.filter(\n      (vehicle) => vehicle.max_distance >= distance\n    );\n    const vehicleOptions = vehicleList.map((vehicle) => (\n      <>\n\n\n        <Radio style={radioStyle} value={vehicle.name}>\n          {vehicle.name}\n        </Radio>\n\n         \n        \n      </>\n    ));\n    return vehicleOptions;\n\n   \n    \n    \n  };\n  const vehicleOnChange =(e:RadioChangeEvent) => {\n    const optionSelected= e.target.value;\n    const currentIndex= e.target.id;\n    selectedVehicle[currentIndex]=optionSelected;\n    setVehicle([...selectedVehicle]);\n    console.log(\"selectedVehicle\",e.target.value)\n  }\n\n\n\n\n\n\n  return (\n    <div>\n      <div className='App'>\n        <header className='App-header'>\n          message: {message}\n          <img src={logo} className='App-logo' alt='logo' />\n          id: {id}\n          <button type='button' onClick={onClick}>\n            increment id\n          </button>\n          <div className='row'>\n            <div className='col'>\n              <select\n                id='0'\n                value={selectedPlanets[0]}\n                onChange={onSelectPlanet}\n              >\n                <option></option>\n\n                {listPlanetOptionsAt(0)}\n              </select>\n              {\n                    selectedPlanets[0] === undefined ? \"\" :\n                     <Radio.Group  name=\"0\" onChange={vehicleOnChange} value={selectedVehicle[0]} > {listVehiclesAt(0)}\n                  </Radio.Group>\n                }\n                \n              \n            </div>\n            <div className='col'>\n\n              <select\n                value={selectedPlanets[1]}\n                id='1'\n                onChange={onSelectPlanet}\n              >\n                <option></option>\n                {listPlanetOptionsAt(1)}\n              </select>\n              {\n                  selectedPlanets[1] === undefined ? \"\" :<Radio.Group  value=\"1\"> {listVehiclesAt(1)}\n                  </Radio.Group>\n                }\n            </div>\n            <div className='col'>\n              <select\n                value={selectedPlanets[2]}\n                id='2'\n                onChange={onSelectPlanet}\n              >\n                <option></option>\n                {listPlanetOptionsAt(2)}\n              </select>\n              {\n                  selectedPlanets[2] === undefined ? \"\" : listVehiclesAt(2)\n                }\n            </div>\n            <div className='col'>\n              <select\n                value={selectedPlanets[3]}\n                id='3'\n                onChange={onSelectPlanet}\n              >\n                <option></option>\n                {listPlanetOptionsAt(3)}\n              </select>\n              {\n                  selectedPlanets[3] === undefined ? \"\" : listVehiclesAt(3)\n                }\n            </div>\n          </div>\n\n        </header>\n      </div>\n    </div>\n  );\n};\nexport default Selection;\n\n\n// import { Radio, Input } from 'antd';\n\n// class App extends React.Component {\n//   state = {\n//     value: 1,\n//   };\n\n//   onChange = e => {\n//     console.log('radio checked', e.target.value);\n//     this.setState({\n//       value: e.target.value,\n//     });\n//   };\n\n//   render() {\n//     const radioStyle = {\n//       display: 'block',\n//       height: '30px',\n//       lineHeight: '30px',\n//     };\n//     const { value } = this.state;\n//     return (\n//       <Radio.Group onChange={this.onChange} value={value}>\n//         <Radio style={radioStyle} value={1}>\n//           Option A\n//         </Radio>\n//         <Radio style={radioStyle} value={2}>\n//           Option B\n//         </Radio>\n//         <Radio style={radioStyle} value={3}>\n//           Option C\n//         </Radio>\n//         <Radio style={radioStyle} value={4}>\n//           More...\n//           {value === 4 ? <Input style={{ width: 100, marginLeft: 10 }} /> : null}\n//         </Radio>\n//       </Radio.Group>\n//     );\n//   }\n// }\n\n// ReactDOM.render(<App />, mountNode);"]},"metadata":{},"sourceType":"module"}